{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { shallowEqual } from '../utils/shallow-equal/shallow-equal.js';\nfunction shallowCompare(prevValue, currValue) {\n  if (!prevValue || !currValue) {\n    return false;\n  }\n  if (prevValue === currValue) {\n    return true;\n  }\n  if (prevValue.length !== currValue.length) {\n    return false;\n  }\n  for (let i = 0; i < prevValue.length; i += 1) {\n    if (!shallowEqual(prevValue[i], currValue[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction useShallowCompare(dependencies) {\n  const ref = useRef([]);\n  const updateRef = useRef(0);\n  if (!shallowCompare(ref.current, dependencies)) {\n    ref.current = dependencies;\n    updateRef.current += 1;\n  }\n  return [updateRef.current];\n}\nfunction useShallowEffect(cb, dependencies) {\n  useEffect(cb, useShallowCompare(dependencies));\n}\nexport { useShallowEffect };","map":{"version":3,"mappings":";;AAEA,SAASA,cAAc,CAACC,SAAS,EAAEC,SAAS,EAAE;EAC5C,IAAI,CAACD,SAAS,IAAI,CAACC,SAAS,EAAE;IAC5B,OAAO,KAAK;EAChB;EACE,IAAID,SAAS,KAAKC,SAAS,EAAE;IAC3B,OAAO,IAAI;EACf;EACE,IAAID,SAAS,CAACE,MAAM,KAAKD,SAAS,CAACC,MAAM,EAAE;IACzC,OAAO,KAAK;EAChB;EACE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,SAAS,CAACE,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAE;IAC5C,IAAI,CAACC,YAAY,CAACJ,SAAS,CAACG,CAAC,CAAC,EAAEF,SAAS,CAACE,CAAC,CAAC,CAAC,EAAE;MAC7C,OAAO,KAAK;IAClB;EACA;EACE,OAAO,IAAI;AACb;AACA,SAASE,iBAAiB,CAACC,YAAY,EAAE;EACvC,MAAMC,GAAG,GAAGC,MAAM,CAAC,EAAE,CAAC;EACtB,MAAMC,SAAS,GAAGD,MAAM,CAAC,CAAC,CAAC;EAC3B,IAAI,CAACT,cAAc,CAACQ,GAAG,CAACG,OAAO,EAAEJ,YAAY,CAAC,EAAE;IAC9CC,GAAG,CAACG,OAAO,GAAGJ,YAAY;IAC1BG,SAAS,CAACC,OAAO,IAAI,CAAC;EAC1B;EACE,OAAO,CAACD,SAAS,CAACC,OAAO,CAAC;AAC5B;AACO,SAASC,gBAAgB,CAACC,EAAE,EAAEN,YAAY,EAAE;EACjDO,SAAS,CAACD,EAAE,EAAEP,iBAAiB,CAACC,YAAY,CAAC,CAAC;AAChD","names":["shallowCompare","prevValue","currValue","length","i","shallowEqual","useShallowCompare","dependencies","ref","useRef","updateRef","current","useShallowEffect","cb","useEffect"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\hooks\\src\\use-shallow-effect\\use-shallow-effect.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { shallowEqual } from '../utils/shallow-equal/shallow-equal';\n\nfunction shallowCompare(prevValue: React.DependencyList, currValue: React.DependencyList) {\n  if (!prevValue || !currValue) {\n    return false;\n  }\n\n  if (prevValue === currValue) {\n    return true;\n  }\n\n  if (prevValue.length !== currValue.length) {\n    return false;\n  }\n\n  for (let i = 0; i < prevValue.length; i += 1) {\n    if (!shallowEqual(prevValue[i], currValue[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction useShallowCompare(dependencies: React.DependencyList) {\n  const ref = useRef<React.DependencyList>([]);\n  const updateRef = useRef<number>(0);\n\n  if (!shallowCompare(ref.current, dependencies)) {\n    ref.current = dependencies;\n    updateRef.current += 1;\n  }\n\n  return [updateRef.current];\n}\n\nexport function useShallowEffect(cb: () => void, dependencies?: React.DependencyList): void {\n  useEffect(cb, useShallowCompare(dependencies));\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}