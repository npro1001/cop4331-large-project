{"ast":null,"code":"import { useState, useRef, useEffect } from 'react';\nfunction useDebouncedState(defaultValue, wait) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    leading: false\n  };\n  const [value, setValue] = useState(defaultValue);\n  const timeoutRef = useRef(null);\n  const leadingRef = useRef(true);\n  const clearTimeout = () => window.clearTimeout(timeoutRef.current);\n  useEffect(() => clearTimeout, []);\n  const debouncedSetValue = newValue => {\n    clearTimeout();\n    if (leadingRef.current && options.leading) {\n      setValue(newValue);\n    } else {\n      timeoutRef.current = window.setTimeout(() => {\n        leadingRef.current = true;\n        setValue(newValue);\n      }, wait);\n    }\n    leadingRef.current = false;\n  };\n  return [value, debouncedSetValue];\n}\nexport { useDebouncedState };","map":{"version":3,"mappings":";AACO,SAASA,iBAAiB,CAACC,YAAY,EAAEC,IAAI,EAAgC;EAAA,IAA9BC,OAAO,uEAAG;IAAEC,OAAO,EAAE;EAAK,CAAE;EAChF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAACN,YAAY,CAAC;EAChD,MAAMO,UAAU,GAAGC,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMC,UAAU,GAAGD,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAME,YAAY,GAAG,MAAMC,MAAM,CAACD,YAAY,CAACH,UAAU,CAACK,OAAO,CAAC;EAClEC,SAAS,CAAC,MAAMH,YAAY,EAAE,EAAE,CAAC;EACjC,MAAMI,iBAAiB,GAAIC,QAAQ,IAAK;IACtCL,YAAY,EAAE;IACd,IAAID,UAAU,CAACG,OAAO,IAAIV,OAAO,CAACC,OAAO,EAAE;MACzCE,QAAQ,CAACU,QAAQ,CAAC;IACxB,CAAK,MAAM;MACLR,UAAU,CAACK,OAAO,GAAGD,MAAM,CAACK,UAAU,CAAC,MAAM;QAC3CP,UAAU,CAACG,OAAO,GAAG,IAAI;QACzBP,QAAQ,CAACU,QAAQ,CAAC;MAC1B,CAAO,EAAEd,IAAI,CAAC;IACd;IACIQ,UAAU,CAACG,OAAO,GAAG,KAAK;EAC9B,CAAG;EACD,OAAO,CAACR,KAAK,EAAEU,iBAAiB,CAAC;AACnC","names":["useDebouncedState","defaultValue","wait","options","leading","value","setValue","useState","timeoutRef","useRef","leadingRef","clearTimeout","window","current","useEffect","debouncedSetValue","newValue","setTimeout"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\hooks\\src\\use-debounced-state\\use-debounced-state.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nexport function useDebouncedState<T = any>(\n  defaultValue: T,\n  wait: number,\n  options = { leading: false }\n) {\n  const [value, setValue] = useState(defaultValue);\n  const timeoutRef = useRef<number>(null);\n  const leadingRef = useRef(true);\n\n  const clearTimeout = () => window.clearTimeout(timeoutRef.current);\n  useEffect(() => clearTimeout, []);\n\n  const debouncedSetValue = (newValue: T) => {\n    clearTimeout();\n    if (leadingRef.current && options.leading) {\n      setValue(newValue);\n    } else {\n      timeoutRef.current = window.setTimeout(() => {\n        leadingRef.current = true;\n        setValue(newValue);\n      }, wait);\n    }\n    leadingRef.current = false;\n  };\n\n  return [value, debouncedSetValue] as const;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}