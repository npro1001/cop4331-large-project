{"ast":null,"code":"import { useCallback, useState, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.js';\nfunction serializeJSON(value, hookName) {\n  try {\n    return JSON.stringify(value);\n  } catch (error) {\n    throw new Error(`@mantine/hooks ${hookName}: Failed to serialize the value`);\n  }\n}\nfunction deserializeJSON(value) {\n  try {\n    return JSON.parse(value);\n  } catch (e) {\n    return value;\n  }\n}\nfunction createStorage(type, hookName) {\n  const eventName = type === \"localStorage\" ? \"mantine-local-storage\" : \"mantine-session-storage\";\n  return function useStorage(_ref) {\n    let {\n      key,\n      defaultValue = void 0,\n      getInitialValueInEffect = true,\n      deserialize = deserializeJSON,\n      serialize = value => serializeJSON(value, hookName)\n    } = _ref;\n    const readStorageValue = useCallback(skipStorage => {\n      if (typeof window === \"undefined\" || !(type in window) || window[type] === null || skipStorage) {\n        return defaultValue;\n      }\n      const storageValue = window[type].getItem(key);\n      return storageValue !== null ? deserialize(storageValue) : defaultValue;\n    }, [key, defaultValue]);\n    const [value, setValue] = useState(readStorageValue(getInitialValueInEffect));\n    const setStorageValue = useCallback(val => {\n      if (val instanceof Function) {\n        setValue(current => {\n          const result = val(current);\n          window[type].setItem(key, serialize(result));\n          window.dispatchEvent(new CustomEvent(eventName, {\n            detail: {\n              key,\n              value: val(current)\n            }\n          }));\n          return result;\n        });\n      } else {\n        window[type].setItem(key, serialize(val));\n        window.dispatchEvent(new CustomEvent(eventName, {\n          detail: {\n            key,\n            value: val\n          }\n        }));\n        setValue(val);\n      }\n    }, [key]);\n    const removeStorageValue = useCallback(() => {\n      window[type].removeItem(key);\n    }, []);\n    useWindowEvent(\"storage\", event => {\n      var _a;\n      if (event.storageArea === window[type] && event.key === key) {\n        setValue(deserialize((_a = event.newValue) != null ? _a : void 0));\n      }\n    });\n    useWindowEvent(eventName, event => {\n      if (event.detail.key === key) {\n        setValue(event.detail.value);\n      }\n    });\n    useEffect(() => {\n      if (defaultValue !== void 0 && value === void 0) {\n        setStorageValue(defaultValue);\n      }\n    }, [defaultValue, value, setStorageValue]);\n    useEffect(() => {\n      if (getInitialValueInEffect) {\n        setValue(readStorageValue());\n      }\n    }, []);\n    return [value === void 0 ? defaultValue : value, setStorageValue, removeStorageValue];\n  };\n}\nexport { createStorage };","map":{"version":3,"mappings":"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","names":["serializeJSON","value","hookName","JSON","stringify","error","Error","deserializeJSON","parse","e","createStorage","type","eventName","useStorage","key","defaultValue","getInitialValueInEffect","deserialize","serialize","readStorageValue","useCallback","skipStorage","window","storageValue","getItem","setValue","useState","setStorageValue","val","Function","current","result","setItem","dispatchEvent","CustomEvent","detail","removeStorageValue","removeItem","useWindowEvent","event","_a","storageArea","newValue","useEffect"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\hooks\\src\\use-local-storage\\create-storage.ts"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\nexport type StorageType = 'localStorage' | 'sessionStorage';\n\nexport interface IStorageProperties<T> {\n  /** Storage key */\n  key: string;\n\n  /** Default value that will be set if value is not found in storage */\n  defaultValue?: T;\n\n  /** If set to true, value will be update is useEffect after mount */\n  getInitialValueInEffect?: boolean;\n\n  /** Function to serialize value into string to be save in storage */\n  serialize?(value: T): string;\n\n  /** Function to deserialize string value from storage to value */\n  deserialize?(value: string): T;\n}\n\nfunction serializeJSON<T>(value: T, hookName: string) {\n  try {\n    return JSON.stringify(value);\n  } catch (error) {\n    throw new Error(`@mantine/hooks ${hookName}: Failed to serialize the value`);\n  }\n}\n\nfunction deserializeJSON(value: string) {\n  try {\n    return JSON.parse(value);\n  } catch {\n    return value;\n  }\n}\n\nexport function createStorage<T>(type: StorageType, hookName: string) {\n  const eventName = type === 'localStorage' ? 'mantine-local-storage' : 'mantine-session-storage';\n\n  return function useStorage({\n    key,\n    defaultValue = undefined,\n    getInitialValueInEffect = true,\n    deserialize = deserializeJSON,\n    serialize = (value: T) => serializeJSON(value, hookName),\n  }: IStorageProperties<T>) {\n    const readStorageValue = useCallback(\n      (skipStorage?: boolean): T => {\n        if (\n          typeof window === 'undefined' ||\n          !(type in window) ||\n          window[type] === null ||\n          skipStorage\n        ) {\n          return defaultValue as T;\n        }\n\n        const storageValue = window[type].getItem(key);\n\n        return storageValue !== null ? deserialize(storageValue) : (defaultValue as T);\n      },\n      [key, defaultValue]\n    );\n\n    const [value, setValue] = useState<T>(readStorageValue(getInitialValueInEffect));\n\n    const setStorageValue = useCallback(\n      (val: T | ((prevState: T) => T)) => {\n        if (val instanceof Function) {\n          setValue((current) => {\n            const result = val(current);\n            window[type].setItem(key, serialize(result));\n            window.dispatchEvent(\n              new CustomEvent(eventName, { detail: { key, value: val(current) } })\n            );\n            return result;\n          });\n        } else {\n          window[type].setItem(key, serialize(val));\n          window.dispatchEvent(new CustomEvent(eventName, { detail: { key, value: val } }));\n          setValue(val);\n        }\n      },\n      [key]\n    );\n\n    const removeStorageValue = useCallback(() => {\n      window[type].removeItem(key);\n    }, []);\n\n    useWindowEvent('storage', (event) => {\n      if (event.storageArea === window[type] && event.key === key) {\n        setValue(deserialize(event.newValue ?? undefined));\n      }\n    });\n\n    useWindowEvent(eventName, (event) => {\n      if (event.detail.key === key) {\n        setValue(event.detail.value);\n      }\n    });\n\n    useEffect(() => {\n      if (defaultValue !== undefined && value === undefined) {\n        setStorageValue(defaultValue);\n      }\n    }, [defaultValue, value, setStorageValue]);\n\n    useEffect(() => {\n      if (getInitialValueInEffect) {\n        setValue(readStorageValue());\n      }\n    }, []);\n\n    return [\n      value === undefined ? defaultValue : value,\n      setStorageValue,\n      removeStorageValue,\n    ] as const;\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}