{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rff96\\\\Documents\\\\GitHub\\\\cop4331-large-project\\\\client\\\\src\\\\components\\\\Post\\\\Post.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './Post.css';\nimport Comment from '../../img/comment.png';\nimport Share from '../../img/share.png';\nimport Heart from '../../img/like.png';\nimport NotLike from '../../img/notlike.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport defaultPFP from '../../img/default-profile.png';\nimport DeleteModal from '../deleteModal/DeleteModal';\nimport { useEffect } from \"react\";\nimport SongCard from \"../SongCard/SongCard\";\nimport { UilTimes } from '@iconscout/react-unicons';\nimport { useParams } from 'react-router-dom';\nimport { likePost, unlikePost } from \"../../features/post/postSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = _ref => {\n  _s();\n  let {\n    data\n  } = _ref;\n  const [modalOpened, setModalOpened] = useState(false);\n  const [isImage, setIsImage] = useState(false);\n  const [isSong, setIsSong] = useState(false);\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [picture, setPicture] = useState();\n  const [profileImage, setProfileImage] = useState();\n  const [isPFP, setIsPFP] = useState();\n  const [activeUser, setActiveUser] = useState({});\n  const params = useParams();\n  const profileUsername = params.username;\n  let profileUser;\n  const dispatch = useDispatch();\n  const fetchProfileUser = async () => {\n    setActiveUser(user);\n  };\n  useEffect(() => {\n    fetchProfileUser();\n  }, [user]);\n  useEffect(() => {\n    //console.log(data.id)\n    if (data.img.data) {\n      setIsImage(true);\n      const base64String = btoa(new Uint8Array(data.img.data.data).reduce(function (data, byte) {\n        return data + String.fromCharCode(byte);\n      }, ''));\n      setPicture(base64String);\n    } else {\n      setIsImage(false);\n    }\n    if (data.profileImage) {\n      if (data.profileImage.data) {\n        var base64String = btoa(new Uint8Array(data.profileImage.data.data).reduce(function (imgData, byte) {\n          return imgData + String.fromCharCode(byte);\n        }, ''));\n        setProfileImage(base64String);\n        setIsPFP(true);\n      } else {\n        setIsPFP(false);\n      }\n    } else {\n      setIsPFP(false);\n    }\n    if (data.song) {\n      setIsSong(true);\n    }\n  }, []);\n  const ChangeLike = async () => {\n    if (!data.liked) {\n      const postId = data.id;\n      const userId = user._id;\n      await dispatch(likePost(postId)).then(response => {\n        console.log(response.payload);\n        window.location.reload();\n      });\n    } else {\n      await dispatch(unlikePost(data.id, user._id)).then(response => {\n        console.log(response);\n        window.location.reload();\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postInfo\",\n      children: [isPFP ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/png;base64,${profileImage}`,\n        alt: \"userCover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: defaultPFP,\n        alt: \"defaultPFP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 98\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" @\", data.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", data.caption]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), user.username === data.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        onClick: () => setModalOpened(true),\n        children: [/*#__PURE__*/_jsxDEV(UilTimes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DeleteModal, {\n          modalOpened: modalOpened,\n          setModalOpened: setModalOpened,\n          post: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), isSong ? /*#__PURE__*/_jsxDEV(SongCard, {\n      name: data.song,\n      artist1: data.artist,\n      image: data.image,\n      url: data.url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }, this) : \"\", isImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `data:image/png;base64,${picture}`,\n      alt: \"user image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 24\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postReact\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: data.liked ? Heart : NotLike,\n        alt: \"\",\n        onClick: ChangeLike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"var(--gray)\",\n        fontSize: '13px'\n      },\n      children: [data.likes, \" likes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(Post, \"p7uaYyTCxB9XNY1LPyxBt7t7uAE=\", false, function () {\n  return [useSelector, useParams, useDispatch];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","Comment","Share","Heart","NotLike","useDispatch","useSelector","defaultPFP","DeleteModal","useEffect","SongCard","UilTimes","useParams","likePost","unlikePost","Post","data","modalOpened","setModalOpened","isImage","setIsImage","isSong","setIsSong","user","state","auth","picture","setPicture","profileImage","setProfileImage","isPFP","setIsPFP","activeUser","setActiveUser","params","profileUsername","username","profileUser","dispatch","fetchProfileUser","img","base64String","btoa","Uint8Array","reduce","byte","String","fromCharCode","imgData","song","ChangeLike","liked","postId","id","userId","_id","then","response","console","log","payload","window","location","reload","name","caption","artist","image","url","color","fontSize","likes"],"sources":["C:/Users/rff96/Documents/GitHub/cop4331-large-project/client/src/components/Post/Post.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './Post.css'\r\nimport Comment from '../../img/comment.png'\r\nimport Share from '../../img/share.png'\r\nimport Heart from '../../img/like.png'\r\nimport NotLike from '../../img/notlike.png'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport defaultPFP from '../../img/default-profile.png'\r\nimport DeleteModal from '../deleteModal/DeleteModal'\r\nimport { useEffect } from \"react\";\r\nimport SongCard from \"../SongCard/SongCard\";\r\nimport { UilTimes } from '@iconscout/react-unicons'\r\nimport { useParams } from 'react-router-dom';\r\nimport { likePost, unlikePost } from \"../../features/post/postSlice\"\r\n\r\nconst Post = ({ data }) => {\r\n\r\n    const [modalOpened, setModalOpened] = useState(false)\r\n    const [isImage, setIsImage] = useState(false)\r\n    const [isSong, setIsSong] = useState(false);\r\n    const { user } = useSelector((state) => state.auth);\r\n    const [picture, setPicture] = useState()\r\n    const [profileImage, setProfileImage] = useState();\r\n    const [isPFP, setIsPFP] = useState();\r\n\r\n    const [activeUser, setActiveUser] = useState({})\r\n    const params = useParams();\r\n    const profileUsername = params.username;\r\n    let profileUser;\r\n    const dispatch = useDispatch();\r\n\r\n    const fetchProfileUser = async () => {\r\n        setActiveUser(user);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchProfileUser()\r\n    },[user]);\r\n\r\n    useEffect(() => {\r\n        //console.log(data.id)\r\n        if (data.img.data) {\r\n\r\n            setIsImage(true)\r\n            const base64String  = btoa(new Uint8Array(data.img.data.data).reduce(function (data, byte) {\r\n                return data + String.fromCharCode(byte);\r\n            }, ''));\r\n            \r\n            setPicture(base64String)\r\n        }\r\n\r\n        else\r\n        {\r\n       \r\n            setIsImage(false)\r\n        }\r\n\r\n\r\n        if (data.profileImage) {\r\n\r\n            if(data.profileImage.data)\r\n            {\r\n                var base64String = btoa(new Uint8Array(data.profileImage.data.data).reduce(\r\n                    function (imgData, byte) {\r\n                        return imgData + String.fromCharCode(byte);\r\n                    },\r\n                    ''\r\n                ));\r\n    \r\n                setProfileImage(base64String);\r\n    \r\n                setIsPFP(true);\r\n            }\r\n\r\n            else{\r\n                setIsPFP(false)\r\n            }\r\n            \r\n        }\r\n        else {\r\n            setIsPFP(false)\r\n        }\r\n\r\n\r\n        if (data.song) {\r\n            setIsSong(true)\r\n        }\r\n    }, [])\r\n\r\n    const ChangeLike = async () => {\r\n    \r\n        if (!data.liked)\r\n        {\r\n            const postId = data.id\r\n            const userId = user._id\r\n            await dispatch(likePost(postId))\r\n                .then( (response) =>{\r\n                    console.log(response.payload)\r\n                    window.location.reload()\r\n                })\r\n        }\r\n        else\r\n        {\r\n            await dispatch(unlikePost(data.id, user._id))\r\n                .then( (response) =>{\r\n                    console.log(response)\r\n                    window.location.reload()\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Post\">\r\n            <div className=\"postInfo\">\r\n                {isPFP ? <img src={`data:image/png;base64,${profileImage}`} alt=\"userCover\" /> : <img src={defaultPFP} alt=\"defaultPFP\" />}\r\n                <div className=\"content\">\r\n                    <div>\r\n                        <span><b>{data.name}</b></span>\r\n                        <span> @{data.username}</span>\r\n                    </div>\r\n\r\n                    <span> {data.caption}</span>\r\n                </div>\r\n\r\n                {(user.username === data.username)\r\n                ? \r\n                <div className=\"options\" onClick={() => setModalOpened(true)}>\r\n                    <UilTimes/>\r\n                    <DeleteModal modalOpened={modalOpened}\r\n                        setModalOpened={setModalOpened}\r\n                        post={data}\r\n                        />\r\n                </div>\r\n                : \"\"}\r\n\r\n            </div>\r\n\r\n            {isSong ? <SongCard\r\n                name={data.song}\r\n                artist1={data.artist}\r\n                image={data.image}\r\n                url={data.url}\r\n            ></SongCard> : \"\"\r\n            }\r\n            {isImage ? <img src={`data:image/png;base64,${picture}`} alt=\"user image\" /> : \"\"}\r\n            <div className=\"postReact\">\r\n                <img src={data.liked ? Heart : NotLike} alt=\"\" onClick={ChangeLike}/>\r\n                {/* <img src={Comment} alt=\"\" />\r\n                <img src={Share} alt=\"\" /> */}\r\n            </div>\r\n\r\n            <span style={{ color: \"var(--gray)\", fontSize: '13px' }}>{data.likes} likes</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}