{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rff96\\\\Documents\\\\GitHub\\\\cop4331-large-project\\\\client\\\\src\\\\components\\\\profileLeft\\\\ProfileLeft.jsx\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useState } from \"react\";\nimport InfoCard from \"../infoCard/InfoCard\";\nimport LogoSearch from \"../logoSearch/LogoSearch\";\nimport SongRecsCard from \"../songRecsCard/SongRecsCard\";\nimport './ProfileLeft.css';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileLeft = () => {\n  _s();\n  const user = useSelector(state => state.auth.user);\n  const [activeUser, setActiveUser] = useState({});\n  const params = useParams();\n  const profileUsername = params.username;\n  let profileUser;\n  const fetchProfileUser = async () => {\n    //if users profile\n    if (profileUsername === user.username) {\n      setActiveUser(user);\n    }\n\n    //logged in user is viewing someone else's page\n    else {\n      //get the persons profile and set them as the active user\n      const res = await fetch(`/api/users/${profileUsername}`, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json'\n        }\n      });\n      profileUser = await res.json();\n      setActiveUser(profileUser);\n    }\n  };\n  useEffect(() => {\n    fetchProfileUser();\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ProfileLeft\",\n    children: [/*#__PURE__*/_jsxDEV(LogoSearch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InfoCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), user.username !== activeUser.username ? \"\" : /*#__PURE__*/_jsxDEV(SongRecsCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfileLeft, \"/BDxdRXxhWZxo3zp9Cr7CZXUdok=\", false, function () {\n  return [useSelector, useParams];\n});\n_c = ProfileLeft;\nexport default ProfileLeft;\nvar _c;\n$RefreshReg$(_c, \"ProfileLeft\");","map":{"version":3,"names":["React","useEffect","useState","InfoCard","LogoSearch","SongRecsCard","useSelector","useParams","ProfileLeft","user","state","auth","activeUser","setActiveUser","params","profileUsername","username","profileUser","fetchProfileUser","res","fetch","method","headers","json"],"sources":["C:/Users/rff96/Documents/GitHub/cop4331-large-project/client/src/components/profileLeft/ProfileLeft.jsx"],"sourcesContent":["import {React, useEffect, useState } from \"react\";\r\nimport InfoCard from \"../infoCard/InfoCard\";\r\nimport LogoSearch from \"../logoSearch/LogoSearch\";\r\nimport SongRecsCard from \"../songRecsCard/SongRecsCard\";\r\nimport './ProfileLeft.css'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ProfileLeft = () => {\r\n    const user = useSelector((state) => state.auth.user)\r\n    const [activeUser, setActiveUser] = useState({})\r\n    const params = useParams();\r\n    const profileUsername = params.username;\r\n    let profileUser;\r\n\r\n    const fetchProfileUser = async () => {\r\n\r\n        //if users profile\r\n        if (profileUsername === user.username) {\r\n            setActiveUser(user);\r\n        }\r\n\r\n        //logged in user is viewing someone else's page\r\n        else {\r\n            //get the persons profile and set them as the active user\r\n            const res = await fetch(`/api/users/${profileUsername}`, {\r\n                method: 'GET',\r\n                headers: { 'Accept': 'application/json' },\r\n            })\r\n            profileUser = await res.json();\r\n            setActiveUser(profileUser);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchProfileUser()\r\n    },[user]);\r\n\r\n\r\n    return (\r\n        <div className=\"ProfileLeft\">\r\n            <LogoSearch/> \r\n            <InfoCard/>\r\n            {(user.username !== activeUser.username)\r\n                ? \r\n                \"\"\r\n                : <SongRecsCard/>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileLeft"],"mappings":";;AAAA,SAAQA,KAAK,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAO,mBAAmB;AAC1B,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,kBAAkB;AAAC;AAE7C,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAMC,IAAI,GAAGH,WAAW,CAAEI,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,IAAI,CAAC;EACpD,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAMY,MAAM,GAAGP,SAAS,EAAE;EAC1B,MAAMQ,eAAe,GAAGD,MAAM,CAACE,QAAQ;EACvC,IAAIC,WAAW;EAEf,MAAMC,gBAAgB,GAAG,YAAY;IAEjC;IACA,IAAIH,eAAe,KAAKN,IAAI,CAACO,QAAQ,EAAE;MACnCH,aAAa,CAACJ,IAAI,CAAC;IACvB;;IAEA;IAAA,KACK;MACD;MACA,MAAMU,GAAG,GAAG,MAAMC,KAAK,CAAE,cAAaL,eAAgB,EAAC,EAAE;QACrDM,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,QAAQ,EAAE;QAAmB;MAC5C,CAAC,CAAC;MACFL,WAAW,GAAG,MAAME,GAAG,CAACI,IAAI,EAAE;MAC9BV,aAAa,CAACI,WAAW,CAAC;IAC9B;EACJ,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACZiB,gBAAgB,EAAE;EACtB,CAAC,EAAC,CAACT,IAAI,CAAC,CAAC;EAGT,oBACI;IAAK,SAAS,EAAC,aAAa;IAAA,wBACxB,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eACb,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAE,EACTA,IAAI,CAACO,QAAQ,KAAKJ,UAAU,CAACI,QAAQ,GAEnC,EAAE,gBACA,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAEnB;AAEd,CAAC;AAAA,GA1CKR,WAAW;EAAA,QACAF,WAAW,EAETC,SAAS;AAAA;AAAA,KAHtBC,WAAW;AA4CjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}