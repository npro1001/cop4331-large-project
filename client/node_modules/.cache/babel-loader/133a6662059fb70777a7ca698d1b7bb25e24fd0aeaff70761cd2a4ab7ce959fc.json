{"ast":null,"code":"import { createSafeContext } from '@mantine/utils';\nimport { MENU_ERRORS } from './Menu.errors.js';\nconst [MenuContextProvider, useMenuContext] = createSafeContext(MENU_ERRORS.context);\nexport { MenuContextProvider, useMenuContext };","map":{"version":3,"mappings":";;AAEY,MAAC,CAACA,mBAAmB,EAAEC,cAAc,CAAC,GAAGC,iBAAiB,CAACC,WAAW,CAACC,OAAO","names":["MenuContextProvider","useMenuContext","createSafeContext","MENU_ERRORS","context"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\client\\node_modules\\@mantine\\core\\src\\Menu\\Menu.context.ts"],"sourcesContent":["import { MantineNumberSize } from '@mantine/styles';\nimport { createSafeContext } from '@mantine/utils';\nimport { MENU_ERRORS } from './Menu.errors';\nimport { MenuTriggerEvent } from './Menu.types';\n\ninterface MenuContext {\n  toggleDropdown(): void;\n  closeDropdownImmediately(): void;\n  closeDropdown(): void;\n  openDropdown(): void;\n  getItemIndex(node: HTMLButtonElement): number;\n  setHovered(index: number): void;\n  hovered: number;\n  closeOnItemClick: boolean;\n  loop: boolean;\n  trigger: MenuTriggerEvent;\n  radius: MantineNumberSize;\n  opened: boolean;\n}\n\nexport const [MenuContextProvider, useMenuContext] = createSafeContext<MenuContext>(\n  MENU_ERRORS.context\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}