{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { InputsGroup } from './InputsGroup.js';\nimport { CheckboxGroupProvider } from '../CheckboxGroup.context.js';\nimport { Input } from '../../Input/Input.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  orientation: \"horizontal\",\n  spacing: \"lg\",\n  size: \"sm\",\n  offset: \"xs\"\n};\nconst CheckboxGroup = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"CheckboxGroup\", defaultProps, props),\n    {\n      children,\n      value,\n      defaultValue,\n      onChange,\n      orientation,\n      spacing,\n      size,\n      wrapperProps,\n      offset\n    } = _a,\n    others = __objRest(_a, [\"children\", \"value\", \"defaultValue\", \"onChange\", \"orientation\", \"spacing\", \"size\", \"wrapperProps\", \"offset\"]);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: [],\n    onChange\n  });\n  const handleChange = event => {\n    const itemValue = event.currentTarget.value;\n    setValue(_value.includes(itemValue) ? _value.filter(item => item !== itemValue) : [..._value, itemValue]);\n  };\n  return /* @__PURE__ */React.createElement(CheckboxGroupProvider, {\n    value: {\n      value: _value,\n      onChange: handleChange,\n      size\n    }\n  }, /* @__PURE__ */React.createElement(Input.Wrapper, __spreadValues(__spreadValues({\n    labelElement: \"div\",\n    size,\n    __staticSelector: \"CheckboxGroup\",\n    ref\n  }, wrapperProps), others), /* @__PURE__ */React.createElement(InputsGroup, {\n    spacing,\n    orientation,\n    offset\n  }, children)));\n});\nCheckboxGroup.displayName = \"@mantine/core/CheckboxGroup\";\nexport { CheckboxGroup };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","defaultProps","orientation","spacing","size","offset","CheckboxGroup","forwardRef","props","ref","_a","useComponentDefaultProps","children","defaultValue","onChange","wrapperProps","others","_value","setValue","useUncontrolled","finalValue","handleChange","event","itemValue","currentTarget","includes","filter","item","React","createElement","CheckboxGroupProvider","Input","Wrapper","labelElement","__staticSelector","InputsGroup","displayName"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\core\\src\\Checkbox\\CheckboxGroup\\CheckboxGroup.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineSize,\n  useComponentDefaultProps,\n} from '@mantine/styles';\nimport { Input, InputWrapperBaseProps, InputWrapperStylesNames } from '../../Input';\nimport { InputsGroup } from './InputsGroup';\nimport { CheckboxGroupProvider } from '../CheckboxGroup.context';\n\nexport type CheckboxGroupStylesNames = InputWrapperStylesNames;\n\nexport interface CheckboxGroupProps\n  extends DefaultProps<CheckboxGroupStylesNames>,\n    InputWrapperBaseProps,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'onChange'> {\n  /** <Checkbox /> components only */\n  children: React.ReactNode;\n\n  /** Value of currently selected checkbox */\n  value?: string[];\n\n  /** Initial value for uncontrolled component */\n  defaultValue?: string[];\n\n  /** Called when value changes */\n  onChange?(value: string[]): void;\n\n  /** Horizontal or vertical orientation */\n  orientation?: 'horizontal' | 'vertical';\n\n  /** Spacing between checkboxes in horizontal orientation */\n  spacing?: MantineNumberSize;\n\n  /** Space between label and inputs */\n  offset?: MantineNumberSize;\n\n  /** Predefined label fontSize, checkbox width, height and border-radius */\n  size?: MantineSize;\n\n  /** Props spread to InputWrapper */\n  wrapperProps?: Record<string, any>;\n}\n\nconst defaultProps: Partial<CheckboxGroupProps> = {\n  orientation: 'horizontal',\n  spacing: 'lg',\n  size: 'sm',\n  offset: 'xs',\n};\n\nexport const CheckboxGroup = forwardRef<HTMLDivElement, CheckboxGroupProps>(\n  (props: CheckboxGroupProps, ref) => {\n    const {\n      children,\n      value,\n      defaultValue,\n      onChange,\n      orientation,\n      spacing,\n      size,\n      wrapperProps,\n      offset,\n      ...others\n    } = useComponentDefaultProps('CheckboxGroup', defaultProps, props);\n\n    const [_value, setValue] = useUncontrolled({\n      value,\n      defaultValue,\n      finalValue: [],\n      onChange,\n    });\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const itemValue = event.currentTarget.value;\n      setValue(\n        _value.includes(itemValue)\n          ? _value.filter((item) => item !== itemValue)\n          : [..._value, itemValue]\n      );\n    };\n\n    return (\n      <CheckboxGroupProvider value={{ value: _value, onChange: handleChange, size }}>\n        <Input.Wrapper\n          labelElement=\"div\"\n          size={size}\n          __staticSelector=\"CheckboxGroup\"\n          ref={ref}\n          {...wrapperProps}\n          {...others}\n        >\n          <InputsGroup spacing={spacing} orientation={orientation} offset={offset}>\n            {children}\n          </InputsGroup>\n        </Input.Wrapper>\n      </CheckboxGroupProvider>\n    );\n  }\n);\n\nCheckboxGroup.displayName = '@mantine/core/CheckboxGroup';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}