{"ast":null,"code":"import React, { forwardRef, useRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { assignRef, useMergedRef } from '@mantine/hooks';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  multiple: false\n};\nconst FileButton = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"FileButton\", defaultProps, props),\n    {\n      onChange,\n      children,\n      multiple,\n      accept,\n      name,\n      form,\n      resetRef,\n      disabled\n    } = _a,\n    others = __objRest(_a, [\"onChange\", \"children\", \"multiple\", \"accept\", \"name\", \"form\", \"resetRef\", \"disabled\"]);\n  const inputRef = useRef();\n  const onClick = () => {\n    !disabled && inputRef.current.click();\n  };\n  const handleChange = event => {\n    if (multiple) {\n      onChange(Array.from(event.currentTarget.files));\n    } else {\n      onChange(event.currentTarget.files[0] || null);\n    }\n  };\n  const reset = () => {\n    inputRef.current.value = \"\";\n  };\n  assignRef(resetRef, reset);\n  return /* @__PURE__ */React.createElement(React.Fragment, null, children(__spreadValues({\n    onClick\n  }, others)), /* @__PURE__ */React.createElement(\"input\", {\n    style: {\n      display: \"none\"\n    },\n    type: \"file\",\n    accept,\n    multiple,\n    onChange: handleChange,\n    ref: useMergedRef(ref, inputRef),\n    name,\n    form\n  }));\n});\nFileButton.displayName = \"@mantine/core/FileButton\";\nexport { FileButton };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","defaultProps","multiple","FileButton","forwardRef","props","ref","_a","useComponentDefaultProps","onChange","children","accept","name","form","resetRef","disabled","others","inputRef","useRef","onClick","current","click","handleChange","event","Array","from","currentTarget","files","reset","assignRef","React","createElement","Fragment","style","display","type","useMergedRef","displayName"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\client\\node_modules\\@mantine\\core\\src\\FileButton\\FileButton.tsx"],"sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport React, { useRef, forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { assignRef, useMergedRef } from '@mantine/hooks';\n\nexport interface FileButtonProps<Multiple extends boolean = false> {\n  /** Called when files are picked */\n  onChange(payload: Multiple extends true ? File[] : File | null): void;\n\n  /** Function that receives button props and returns react node that should be rendered */\n  children(props: { onClick(): void }): React.ReactNode;\n\n  /** Determines whether user can pick more than one file */\n  multiple?: Multiple;\n\n  /** File input accept attribute, for example, \"image/png,image/jpeg\" */\n  accept?: string;\n\n  /** Input name attribute */\n  name?: string;\n\n  /** Input form attribute */\n  form?: string;\n\n  /** Function that should be called when value changes to null or empty array */\n  resetRef?: React.ForwardedRef<() => void>;\n\n  /** Disables file picker */\n  disabled?: boolean;\n}\n\nconst defaultProps: Partial<FileButtonProps> = {\n  multiple: false,\n};\n\ntype FileButtonComponent = (<Multiple extends boolean = false>(\n  props: FileButtonProps<Multiple>\n) => React.ReactElement) & { displayName?: string };\n\nexport const FileButton: FileButtonComponent = forwardRef<HTMLInputElement, FileButtonProps>(\n  (props, ref) => {\n    const { onChange, children, multiple, accept, name, form, resetRef, disabled, ...others } =\n      useComponentDefaultProps('FileButton', defaultProps, props);\n\n    const inputRef = useRef<HTMLInputElement>();\n\n    const onClick = () => {\n      !disabled && inputRef.current.click();\n    };\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (multiple) {\n        onChange(Array.from(event.currentTarget.files) as any);\n      } else {\n        onChange(event.currentTarget.files[0] || null);\n      }\n    };\n\n    const reset = () => {\n      inputRef.current.value = '';\n    };\n\n    assignRef(resetRef, reset);\n\n    return (\n      <>\n        {children({ onClick, ...others })}\n\n        <input\n          style={{ display: 'none' }}\n          type=\"file\"\n          accept={accept}\n          multiple={multiple}\n          onChange={handleChange}\n          ref={useMergedRef(ref, inputRef)}\n          name={name}\n          form={form}\n        />\n      </>\n    );\n  }\n) as any;\n\nFileButton.displayName = '@mantine/core/FileButton';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}