{"ast":null,"code":"import { useEffect } from 'react';\nfunction useWindowEvent(type, listener, options) {\n  useEffect(() => {\n    window.addEventListener(type, listener, options);\n    return () => window.removeEventListener(type, listener, options);\n  }, [type, listener]);\n}\nexport { useWindowEvent };","map":{"version":3,"mappings":";AACO,SAASA,cAAc,CAACC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAE;EACtDC,SAAS,CAAC,MAAM;IACdC,MAAM,CAACC,gBAAgB,CAACL,IAAI,EAAEC,QAAQ,EAAEC,OAAO,CAAC;IAChD,OAAO,MAAME,MAAM,CAACE,mBAAmB,CAACN,IAAI,EAAEC,QAAQ,EAAEC,OAAO,CAAC;EACpE,CAAG,EAAE,CAACF,IAAI,EAAEC,QAAQ,CAAC,CAAC;AACtB","names":["useWindowEvent","type","listener","options","useEffect","window","addEventListener","removeEventListener"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\hooks\\src\\use-window-event\\use-window-event.ts"],"sourcesContent":["import { useEffect } from 'react';\n\nexport function useWindowEvent<K extends string>(\n  type: K,\n  listener: K extends keyof WindowEventMap\n    ? (this: Window, ev: WindowEventMap[K]) => void\n    : (this: Window, ev: CustomEvent) => void,\n  options?: boolean | AddEventListenerOptions\n) {\n  useEffect(() => {\n    window.addEventListener(type, listener, options);\n    return () => window.removeEventListener(type, listener, options);\n  }, [type, listener]);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}