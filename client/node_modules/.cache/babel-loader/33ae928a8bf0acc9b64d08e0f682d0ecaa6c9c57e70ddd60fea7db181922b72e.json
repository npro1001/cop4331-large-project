{"ast":null,"code":"import React, { forwardRef, useState, useRef, useEffect } from 'react';\nimport { useUncontrolled, useMove, useMergedRef } from '@mantine/hooks';\nimport { useComponentDefaultProps, useMantineTheme } from '@mantine/styles';\nimport { getClientPosition } from '../utils/get-client-position/get-client-position.js';\nimport { getPosition } from '../utils/get-position/get-position.js';\nimport { getChangeValue } from '../utils/get-change-value/get-change-value.js';\nimport { Thumb } from '../Thumb/Thumb.js';\nimport { Track } from '../Track/Track.js';\nimport { SliderRoot } from '../SliderRoot/SliderRoot.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  size: \"md\",\n  radius: \"xl\",\n  min: 0,\n  max: 100,\n  minRange: 10,\n  step: 1,\n  marks: [],\n  label: f => f,\n  labelTransition: \"skew-down\",\n  labelTransitionDuration: 0,\n  labelAlwaysOn: false,\n  thumbFromLabel: \"\",\n  thumbToLabel: \"\",\n  showLabelOnHover: true,\n  disabled: false,\n  scale: v => v\n};\nconst RangeSlider = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"RangeSlider\", defaultProps, props),\n    {\n      classNames,\n      styles,\n      color,\n      value,\n      onChange,\n      onChangeEnd,\n      size,\n      radius,\n      min,\n      max,\n      minRange,\n      step,\n      precision,\n      defaultValue,\n      name,\n      marks,\n      label,\n      labelTransition,\n      labelTransitionDuration,\n      labelTransitionTimingFunction,\n      labelAlwaysOn,\n      thumbFromLabel,\n      thumbToLabel,\n      showLabelOnHover,\n      thumbChildren,\n      disabled,\n      unstyled,\n      thumbSize,\n      scale,\n      inverted\n    } = _a,\n    others = __objRest(_a, [\"classNames\", \"styles\", \"color\", \"value\", \"onChange\", \"onChangeEnd\", \"size\", \"radius\", \"min\", \"max\", \"minRange\", \"step\", \"precision\", \"defaultValue\", \"name\", \"marks\", \"label\", \"labelTransition\", \"labelTransitionDuration\", \"labelTransitionTimingFunction\", \"labelAlwaysOn\", \"thumbFromLabel\", \"thumbToLabel\", \"showLabelOnHover\", \"thumbChildren\", \"disabled\", \"unstyled\", \"thumbSize\", \"scale\", \"inverted\"]);\n  const theme = useMantineTheme();\n  const [focused, setFocused] = useState(-1);\n  const [hovered, setHovered] = useState(false);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: [min, max],\n    onChange\n  });\n  const valueRef = useRef(_value);\n  const thumbs = useRef([]);\n  const thumbIndex = useRef(void 0);\n  const positions = [getPosition({\n    value: _value[0],\n    min,\n    max\n  }), getPosition({\n    value: _value[1],\n    min,\n    max\n  })];\n  const _setValue = val => {\n    setValue(val);\n    valueRef.current = val;\n  };\n  useEffect(() => {\n    if (Array.isArray(value)) {\n      valueRef.current = value;\n    }\n  }, Array.isArray(value) ? [value[0], value[1]] : [null, null]);\n  const setRangedValue = (val, index, triggerChangeEnd) => {\n    const clone = [...valueRef.current];\n    clone[index] = val;\n    if (index === 0) {\n      if (val > clone[1] - minRange) {\n        clone[1] = Math.min(val + minRange, max);\n      }\n      if (val > (max - minRange || min)) {\n        clone[index] = valueRef.current[index];\n      }\n    }\n    if (index === 1) {\n      if (val < clone[0] + minRange) {\n        clone[0] = Math.max(val - minRange, min);\n      }\n      if (val < clone[0] + minRange) {\n        clone[index] = valueRef.current[index];\n      }\n    }\n    _setValue(clone);\n    if (triggerChangeEnd) {\n      onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current);\n    }\n  };\n  const handleChange = val => {\n    if (!disabled) {\n      const nextValue = getChangeValue({\n        value: val,\n        min,\n        max,\n        step,\n        precision\n      });\n      setRangedValue(nextValue, thumbIndex.current, false);\n    }\n  };\n  const {\n    ref: container,\n    active\n  } = useMove(_ref => {\n    let {\n      x\n    } = _ref;\n    return handleChange(x);\n  }, {\n    onScrubEnd: () => onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current)\n  }, theme.dir);\n  function handleThumbMouseDown(event, index) {\n    event.stopPropagation();\n    thumbIndex.current = index;\n  }\n  const handleTrackMouseDownCapture = event => {\n    container.current.focus();\n    const rect = container.current.getBoundingClientRect();\n    const changePosition = getClientPosition(event.nativeEvent);\n    const changeValue = getChangeValue({\n      value: changePosition - rect.left,\n      max,\n      min,\n      step,\n      containerWidth: rect.width\n    });\n    const nearestHandle = Math.abs(_value[0] - changeValue) > Math.abs(_value[1] - changeValue) ? 1 : 0;\n    const _nearestHandle = theme.dir === \"ltr\" ? nearestHandle : nearestHandle === 1 ? 0 : 1;\n    thumbIndex.current = _nearestHandle;\n  };\n  const getFocusedThumbIndex = () => {\n    if (focused !== 1 && focused !== 0) {\n      setFocused(0);\n      return 0;\n    }\n    return focused;\n  };\n  const handleTrackKeydownCapture = event => {\n    if (!disabled) {\n      switch (event.key) {\n        case \"ArrowUp\":\n          {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(Math.min(Math.max(valueRef.current[focusedIndex] + step, min), max), focusedIndex, true);\n            break;\n          }\n        case \"ArrowRight\":\n          {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(Math.min(Math.max(theme.dir === \"rtl\" ? valueRef.current[focusedIndex] - step : valueRef.current[focusedIndex] + step, min), max), focusedIndex, true);\n            break;\n          }\n        case \"ArrowDown\":\n          {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(Math.min(Math.max(valueRef.current[focusedIndex] - step, min), max), focusedIndex, true);\n            break;\n          }\n        case \"ArrowLeft\":\n          {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(Math.min(Math.max(theme.dir === \"rtl\" ? valueRef.current[focusedIndex] + step : valueRef.current[focusedIndex] - step, min), max), focusedIndex, true);\n            break;\n          }\n      }\n    }\n  };\n  const sharedThumbProps = {\n    max,\n    min,\n    color,\n    size,\n    labelTransition,\n    labelTransitionDuration,\n    labelTransitionTimingFunction,\n    labelAlwaysOn,\n    onBlur: () => setFocused(-1),\n    classNames,\n    styles\n  };\n  const hasArrayThumbChildren = Array.isArray(thumbChildren);\n  return /* @__PURE__ */React.createElement(SliderRoot, __spreadProps(__spreadValues({}, others), {\n    size,\n    ref: useMergedRef(container, ref),\n    onTouchStartCapture: handleTrackMouseDownCapture,\n    onTouchEndCapture: () => {\n      thumbIndex.current = -1;\n    },\n    onMouseDownCapture: handleTrackMouseDownCapture,\n    onMouseUpCapture: () => {\n      thumbIndex.current = -1;\n    },\n    onKeyDownCapture: handleTrackKeydownCapture,\n    styles,\n    classNames,\n    disabled,\n    unstyled\n  }), /* @__PURE__ */React.createElement(Track, {\n    offset: positions[0],\n    marksOffset: _value[0],\n    filled: positions[1] - positions[0],\n    marks,\n    inverted,\n    size,\n    radius,\n    color,\n    min,\n    max,\n    value: _value[1],\n    styles,\n    classNames,\n    onMouseEnter: showLabelOnHover ? () => setHovered(true) : void 0,\n    onMouseLeave: showLabelOnHover ? () => setHovered(false) : void 0,\n    onChange: val => {\n      const nearestValue = Math.abs(_value[0] - val) > Math.abs(_value[1] - val) ? 1 : 0;\n      const clone = [..._value];\n      clone[nearestValue] = val;\n      _setValue(clone);\n    },\n    disabled,\n    unstyled\n  }, /* @__PURE__ */React.createElement(Thumb, __spreadProps(__spreadValues({}, sharedThumbProps), {\n    value: scale(_value[0]),\n    position: positions[0],\n    dragging: active,\n    label: typeof label === \"function\" ? label(scale(_value[0])) : label,\n    ref: node => {\n      thumbs.current[0] = node;\n    },\n    thumbLabel: thumbFromLabel,\n    onMouseDown: event => handleThumbMouseDown(event, 0),\n    onFocus: () => setFocused(0),\n    showLabelOnHover: showLabelOnHover && hovered,\n    disabled,\n    unstyled,\n    thumbSize\n  }), hasArrayThumbChildren ? thumbChildren[0] : thumbChildren), /* @__PURE__ */React.createElement(Thumb, __spreadProps(__spreadValues({}, sharedThumbProps), {\n    thumbLabel: thumbToLabel,\n    value: scale(_value[1]),\n    position: positions[1],\n    dragging: active,\n    label: typeof label === \"function\" ? label(scale(_value[1])) : label,\n    ref: node => {\n      thumbs.current[1] = node;\n    },\n    onMouseDown: event => handleThumbMouseDown(event, 1),\n    onFocus: () => setFocused(1),\n    showLabelOnHover: showLabelOnHover && hovered,\n    disabled,\n    unstyled,\n    thumbSize\n  }), hasArrayThumbChildren ? thumbChildren[1] : thumbChildren)), /* @__PURE__ */React.createElement(\"input\", {\n    type: \"hidden\",\n    name: `${name}_from`,\n    value: _value[0]\n  }), /* @__PURE__ */React.createElement(\"input\", {\n    type: \"hidden\",\n    name: `${name}_to`,\n    value: _value[1]\n  }));\n});\nRangeSlider.displayName = \"@mantine/core/RangeSlider\";\nexport { RangeSlider };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","defaultProps","size","radius","min","max","minRange","step","marks","label","f","labelTransition","labelTransitionDuration","labelAlwaysOn","thumbFromLabel","thumbToLabel","showLabelOnHover","disabled","scale","v","RangeSlider","forwardRef","props","ref","_a","useComponentDefaultProps","classNames","styles","color","onChange","onChangeEnd","precision","defaultValue","name","labelTransitionTimingFunction","thumbChildren","unstyled","thumbSize","inverted","others","theme","useMantineTheme","focused","setFocused","useState","hovered","setHovered","_value","setValue","useUncontrolled","finalValue","valueRef","useRef","thumbs","thumbIndex","positions","getPosition","_setValue","val","current","useEffect","Array","isArray","setRangedValue","index","triggerChangeEnd","clone","Math","handleChange","nextValue","getChangeValue","container","active","useMove","x","onScrubEnd","dir","handleThumbMouseDown","event","stopPropagation","handleTrackMouseDownCapture","focus","rect","getBoundingClientRect","changePosition","getClientPosition","nativeEvent","changeValue","left","containerWidth","width","nearestHandle","abs","_nearestHandle","getFocusedThumbIndex","handleTrackKeydownCapture","preventDefault","focusedIndex","sharedThumbProps","onBlur","hasArrayThumbChildren","React","createElement","SliderRoot","useMergedRef","onTouchStartCapture","onTouchEndCapture","onMouseDownCapture","onMouseUpCapture","onKeyDownCapture","Track","offset","marksOffset","filled","onMouseEnter","onMouseLeave","nearestValue","Thumb","position","dragging","node","thumbLabel","onMouseDown","onFocus","type","displayName"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\core\\src\\Slider\\RangeSlider\\RangeSlider.tsx"],"sourcesContent":["import React, { useRef, useState, forwardRef, useEffect } from 'react';\nimport { useMove, useUncontrolled, useMergedRef } from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineColor,\n  useMantineTheme,\n  useComponentDefaultProps,\n} from '@mantine/styles';\nimport { MantineTransition } from '../../Transition';\nimport { getClientPosition } from '../utils/get-client-position/get-client-position';\nimport { getPosition } from '../utils/get-position/get-position';\nimport { getChangeValue } from '../utils/get-change-value/get-change-value';\nimport { Thumb, ThumbStylesNames } from '../Thumb/Thumb';\nimport { Track, TrackStylesNames } from '../Track/Track';\nimport { MarksStylesNames } from '../Marks/Marks';\nimport { SliderRoot, SliderRootStylesNames } from '../SliderRoot/SliderRoot';\n\nexport type RangeSliderStylesNames =\n  | SliderRootStylesNames\n  | ThumbStylesNames\n  | TrackStylesNames\n  | MarksStylesNames;\n\ntype Value = [number, number];\n\nexport interface RangeSliderProps\n  extends DefaultProps<RangeSliderStylesNames>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'value' | 'onChange' | 'defaultValue'> {\n  /** Color from theme.colors */\n  color?: MantineColor;\n\n  /** Track border-radius from theme or number to set border-radius in px */\n  radius?: MantineNumberSize;\n\n  /** Predefined track and thumb size, number to set sizes in px */\n  size?: MantineNumberSize;\n\n  /** Minimal possible value */\n  min?: number;\n\n  /** Maximum possible value */\n  max?: number;\n\n  /** Minimal range interval */\n  minRange?: number;\n\n  /** Number by which value will be incremented/decremented with thumb drag and arrows */\n  step?: number;\n\n  /** Amount of digits after the decimal point */\n  precision?: number;\n\n  /** Current value for controlled slider */\n  value?: Value;\n\n  /** Default value for uncontrolled slider */\n  defaultValue?: Value;\n\n  /** Called each time value changes */\n  onChange?(value: Value): void;\n\n  /** Called when user stops dragging slider or changes value with arrows */\n  onChangeEnd?(value: Value): void;\n\n  /** Hidden input name, use with uncontrolled variant */\n  name?: string;\n\n  /** Marks which will be placed on the track */\n  marks?: { value: number; label?: React.ReactNode }[];\n\n  /** Function to generate label or any react node to render instead, set to null to disable label */\n  label?: React.ReactNode | ((value: number) => React.ReactNode);\n\n  /** Label appear/disappear transition */\n  labelTransition?: MantineTransition;\n\n  /** Label appear/disappear transition duration in ms */\n  labelTransitionDuration?: number;\n\n  /** Label appear/disappear transition timing function, defaults to theme.transitionRimingFunction */\n  labelTransitionTimingFunction?: string;\n\n  /** If true label will be not be hidden when user stops dragging */\n  labelAlwaysOn?: boolean;\n\n  /** First thumb aria-label */\n  thumbFromLabel?: string;\n\n  /** Second thumb aria-label */\n  thumbToLabel?: string;\n\n  /**If true slider label will appear on hover */\n  showLabelOnHover?: boolean;\n\n  /** Thumbs children, can be used to add icons */\n  thumbChildren?: React.ReactNode;\n\n  /** Disables slider */\n  disabled?: boolean;\n\n  /** Thumb width and height in px */\n  thumbSize?: number;\n\n  /** A transformation function, to change the scale of the slider */\n  scale?: (value: number) => number;\n\n  /** Allows the track to be inverted */\n  inverted?: boolean;\n}\n\nconst defaultProps: Partial<RangeSliderProps> = {\n  size: 'md',\n  radius: 'xl',\n  min: 0,\n  max: 100,\n  minRange: 10,\n  step: 1,\n  marks: [],\n  label: (f) => f,\n  labelTransition: 'skew-down',\n  labelTransitionDuration: 0,\n  labelAlwaysOn: false,\n  thumbFromLabel: '',\n  thumbToLabel: '',\n  showLabelOnHover: true,\n  disabled: false,\n  scale: (v) => v,\n};\n\nexport const RangeSlider = forwardRef<HTMLDivElement, RangeSliderProps>((props, ref) => {\n  const {\n    classNames,\n    styles,\n    color,\n    value,\n    onChange,\n    onChangeEnd,\n    size,\n    radius,\n    min,\n    max,\n    minRange,\n    step,\n    precision,\n    defaultValue,\n    name,\n    marks,\n    label,\n    labelTransition,\n    labelTransitionDuration,\n    labelTransitionTimingFunction,\n    labelAlwaysOn,\n    thumbFromLabel,\n    thumbToLabel,\n    showLabelOnHover,\n    thumbChildren,\n    disabled,\n    unstyled,\n    thumbSize,\n    scale,\n    inverted,\n    ...others\n  } = useComponentDefaultProps('RangeSlider', defaultProps, props);\n\n  const theme = useMantineTheme();\n  const [focused, setFocused] = useState(-1);\n  const [hovered, setHovered] = useState(false);\n  const [_value, setValue] = useUncontrolled<Value>({\n    value,\n    defaultValue,\n    finalValue: [min, max],\n    onChange,\n  });\n  const valueRef = useRef(_value);\n  const thumbs = useRef<HTMLDivElement[]>([]);\n  const thumbIndex = useRef<number>(undefined);\n  const positions = [\n    getPosition({ value: _value[0], min, max }),\n    getPosition({ value: _value[1], min, max }),\n  ];\n\n  const _setValue = (val: Value) => {\n    setValue(val);\n    valueRef.current = val;\n  };\n\n  useEffect(\n    () => {\n      if (Array.isArray(value)) {\n        valueRef.current = value;\n      }\n    },\n    Array.isArray(value) ? [value[0], value[1]] : [null, null]\n  );\n\n  const setRangedValue = (val: number, index: number, triggerChangeEnd: boolean) => {\n    const clone: Value = [...valueRef.current];\n    clone[index] = val;\n\n    if (index === 0) {\n      if (val > clone[1] - minRange) {\n        clone[1] = Math.min(val + minRange, max);\n      }\n\n      if (val > (max - minRange || min)) {\n        clone[index] = valueRef.current[index];\n      }\n    }\n\n    if (index === 1) {\n      if (val < clone[0] + minRange) {\n        clone[0] = Math.max(val - minRange, min);\n      }\n\n      if (val < clone[0] + minRange) {\n        clone[index] = valueRef.current[index];\n      }\n    }\n\n    _setValue(clone);\n\n    if (triggerChangeEnd) {\n      onChangeEnd?.(valueRef.current);\n    }\n  };\n\n  const handleChange = (val: number) => {\n    if (!disabled) {\n      const nextValue = getChangeValue({ value: val, min, max, step, precision });\n      setRangedValue(nextValue, thumbIndex.current, false);\n    }\n  };\n\n  const { ref: container, active } = useMove(\n    ({ x }) => handleChange(x),\n    { onScrubEnd: () => onChangeEnd?.(valueRef.current) },\n    theme.dir\n  );\n\n  function handleThumbMouseDown(\n    event: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>,\n    index: number\n  ) {\n    event.stopPropagation();\n    thumbIndex.current = index;\n  }\n\n  const handleTrackMouseDownCapture = (\n    event: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>\n  ) => {\n    container.current.focus();\n    const rect = container.current.getBoundingClientRect();\n    const changePosition = getClientPosition(event.nativeEvent);\n    const changeValue = getChangeValue({\n      value: changePosition - rect.left,\n      max,\n      min,\n      step,\n      containerWidth: rect.width,\n    });\n\n    const nearestHandle =\n      Math.abs(_value[0] - changeValue) > Math.abs(_value[1] - changeValue) ? 1 : 0;\n    const _nearestHandle = theme.dir === 'ltr' ? nearestHandle : nearestHandle === 1 ? 0 : 1;\n\n    thumbIndex.current = _nearestHandle;\n  };\n\n  const getFocusedThumbIndex = () => {\n    if (focused !== 1 && focused !== 0) {\n      setFocused(0);\n      return 0;\n    }\n\n    return focused;\n  };\n\n  const handleTrackKeydownCapture = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (!disabled) {\n      switch (event.key) {\n        case 'ArrowUp': {\n          event.preventDefault();\n          const focusedIndex = getFocusedThumbIndex();\n          thumbs.current[focusedIndex].focus();\n          setRangedValue(\n            Math.min(Math.max(valueRef.current[focusedIndex] + step, min), max),\n            focusedIndex,\n            true\n          );\n          break;\n        }\n        case 'ArrowRight': {\n          event.preventDefault();\n          const focusedIndex = getFocusedThumbIndex();\n          thumbs.current[focusedIndex].focus();\n          setRangedValue(\n            Math.min(\n              Math.max(\n                theme.dir === 'rtl'\n                  ? valueRef.current[focusedIndex] - step\n                  : valueRef.current[focusedIndex] + step,\n                min\n              ),\n              max\n            ),\n            focusedIndex,\n            true\n          );\n          break;\n        }\n\n        case 'ArrowDown': {\n          event.preventDefault();\n          const focusedIndex = getFocusedThumbIndex();\n          thumbs.current[focusedIndex].focus();\n          setRangedValue(\n            Math.min(Math.max(valueRef.current[focusedIndex] - step, min), max),\n            focusedIndex,\n            true\n          );\n          break;\n        }\n        case 'ArrowLeft': {\n          event.preventDefault();\n          const focusedIndex = getFocusedThumbIndex();\n          thumbs.current[focusedIndex].focus();\n          setRangedValue(\n            Math.min(\n              Math.max(\n                theme.dir === 'rtl'\n                  ? valueRef.current[focusedIndex] + step\n                  : valueRef.current[focusedIndex] - step,\n                min\n              ),\n              max\n            ),\n            focusedIndex,\n            true\n          );\n          break;\n        }\n\n        default: {\n          break;\n        }\n      }\n    }\n  };\n\n  const sharedThumbProps = {\n    max,\n    min,\n    color,\n    size,\n    labelTransition,\n    labelTransitionDuration,\n    labelTransitionTimingFunction,\n    labelAlwaysOn,\n    onBlur: () => setFocused(-1),\n    classNames,\n    styles,\n  };\n\n  const hasArrayThumbChildren = Array.isArray(thumbChildren);\n\n  return (\n    <SliderRoot\n      {...others}\n      size={size}\n      ref={useMergedRef(container, ref)}\n      onTouchStartCapture={handleTrackMouseDownCapture}\n      onTouchEndCapture={() => {\n        thumbIndex.current = -1;\n      }}\n      onMouseDownCapture={handleTrackMouseDownCapture}\n      onMouseUpCapture={() => {\n        thumbIndex.current = -1;\n      }}\n      onKeyDownCapture={handleTrackKeydownCapture}\n      styles={styles}\n      classNames={classNames}\n      disabled={disabled}\n      unstyled={unstyled}\n    >\n      <Track\n        offset={positions[0]}\n        marksOffset={_value[0]}\n        filled={positions[1] - positions[0]}\n        marks={marks}\n        inverted={inverted}\n        size={size}\n        radius={radius}\n        color={color}\n        min={min}\n        max={max}\n        value={_value[1]}\n        styles={styles}\n        classNames={classNames}\n        onMouseEnter={showLabelOnHover ? () => setHovered(true) : undefined}\n        onMouseLeave={showLabelOnHover ? () => setHovered(false) : undefined}\n        onChange={(val) => {\n          const nearestValue = Math.abs(_value[0] - val) > Math.abs(_value[1] - val) ? 1 : 0;\n          const clone: Value = [..._value];\n          clone[nearestValue] = val;\n          _setValue(clone);\n        }}\n        disabled={disabled}\n        unstyled={unstyled}\n      >\n        <Thumb\n          {...sharedThumbProps}\n          value={scale(_value[0])}\n          position={positions[0]}\n          dragging={active}\n          label={typeof label === 'function' ? label(scale(_value[0])) : label}\n          ref={(node) => {\n            thumbs.current[0] = node;\n          }}\n          thumbLabel={thumbFromLabel}\n          onMouseDown={(event) => handleThumbMouseDown(event, 0)}\n          onFocus={() => setFocused(0)}\n          showLabelOnHover={showLabelOnHover && hovered}\n          disabled={disabled}\n          unstyled={unstyled}\n          thumbSize={thumbSize}\n        >\n          {hasArrayThumbChildren ? thumbChildren[0] : thumbChildren}\n        </Thumb>\n\n        <Thumb\n          {...sharedThumbProps}\n          thumbLabel={thumbToLabel}\n          value={scale(_value[1])}\n          position={positions[1]}\n          dragging={active}\n          label={typeof label === 'function' ? label(scale(_value[1])) : label}\n          ref={(node) => {\n            thumbs.current[1] = node;\n          }}\n          onMouseDown={(event) => handleThumbMouseDown(event, 1)}\n          onFocus={() => setFocused(1)}\n          showLabelOnHover={showLabelOnHover && hovered}\n          disabled={disabled}\n          unstyled={unstyled}\n          thumbSize={thumbSize}\n        >\n          {hasArrayThumbChildren ? thumbChildren[1] : thumbChildren}\n        </Thumb>\n      </Track>\n\n      <input type=\"hidden\" name={`${name}_from`} value={_value[0]} />\n      <input type=\"hidden\" name={`${name}_to`} value={_value[1]} />\n    </SliderRoot>\n  );\n});\n\nRangeSlider.displayName = '@mantine/core/RangeSlider';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}