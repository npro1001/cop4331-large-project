{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rff96\\\\Documents\\\\GitHub\\\\cop4331-large-project\\\\client\\\\src\\\\components\\\\songRecsCard\\\\SongRecsCard.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './SongRecsCard.css';\nimport { useDispatch } from 'react-redux';\nimport { getRecommended } from '../../features/spotify/spotifySlice';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport loadingCir from '../../img/loading-gif.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SongRecsCard = () => {\n  _s();\n  const {\n    isConnected\n  } = useSelector(store => store.spotify);\n  const user = useSelector(store => store.auth.user);\n  const dispatch = useDispatch();\n  const [list, setList] = useState();\n  const [spotifyLoading, setSpotifyLoading] = useState(true);\n  let loaded = false;\n  let tracks = [];\n\n  /*\r\n  async function fetchData() {\r\n      if (isConnected) {\r\n          if(loaded) {\r\n              dispatch(getRecommended())\r\n              .then(response => {\r\n                    //randomly choice 3 numbers \r\n                  let choices = Array.from(Array(20),(x,i)=>i)\r\n                  var num = Math.floor(Math.random() * choices.length);\r\n                  \r\n                  var pick = choices.splice(num,1) // remove number from array\r\n                  let one = pick;\r\n                    num = Math.floor(Math.random() * choices.length);\r\n                  let two = choices.splice(num,1)\r\n                    num = Math.floor(Math.random() * choices.length);\r\n                  let three = choices.splice(num,1)\r\n                      tracks = [\r\n                      { name: response.payload.data.tracks[one].name, artist: response.payload.data.tracks[one].artists[0].name, img: response.payload.data.tracks[one].album.images[0].url },\r\n                      { name: response.payload.data.tracks[two].name, artist: response.payload.data.tracks[two].artists[0].name, img: response.payload.data.tracks[two].album.images[0].url },\r\n                      { name: response.payload.data.tracks[three].name, artist: response.payload.data.tracks[three].artists[0].name, img: response.payload.data.tracks[three].album.images[0].url },\r\n                  ]\r\n                    setList(tracks);\r\n                  setSpotifyLoading(false)\r\n              })\r\n          }\r\n          loaded = true;\r\n      }\r\n  } */\n\n  useEffect(() => {\n    //fetchData();\n  }, [user]); //! Important\n\n  if (list && !spotifyLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SongRecsCard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"You might like...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), list.map((songrec, id) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"songrec\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: songrec.img,\n              alt: \"\",\n              className: \"songrecImg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"songname\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: songrec.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: songrec.artist\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"loadingCircle\",\n      src: loadingCir,\n      alt: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this);\n  }\n};\n_s(SongRecsCard, \"yUWUlY8COV5TdbPcmhO1ov/yH2A=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = SongRecsCard;\nexport default SongRecsCard;\nvar _c;\n$RefreshReg$(_c, \"SongRecsCard\");","map":{"version":3,"names":["React","useDispatch","getRecommended","useSelector","useEffect","useState","loadingCir","SongRecsCard","isConnected","store","spotify","user","auth","dispatch","list","setList","spotifyLoading","setSpotifyLoading","loaded","tracks","map","songrec","id","img","name","artist"],"sources":["C:/Users/rff96/Documents/GitHub/cop4331-large-project/client/src/components/songRecsCard/SongRecsCard.jsx"],"sourcesContent":["import React from 'react'\r\nimport './SongRecsCard.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport { getRecommended } from '../../features/spotify/spotifySlice'\r\nimport { useSelector } from 'react-redux'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport loadingCir from '../../img/loading-gif.gif'\r\n\r\n\r\n\r\nconst SongRecsCard = () => {\r\n    const { isConnected } = useSelector((store) => store.spotify)\r\n    const user = useSelector((store) => store.auth.user)\r\n\r\n    const dispatch = useDispatch()\r\n    const [list, setList] = useState();\r\n    const [spotifyLoading, setSpotifyLoading] = useState(true)\r\n    let loaded = false\r\n\r\n\r\n    let tracks = [];\r\n\r\n    /*\r\n    async function fetchData() {\r\n        if (isConnected) {\r\n            if(loaded) {\r\n                dispatch(getRecommended())\r\n                .then(response => {\r\n\r\n                    //randomly choice 3 numbers \r\n                    let choices = Array.from(Array(20),(x,i)=>i)\r\n                    var num = Math.floor(Math.random() * choices.length);\r\n                    \r\n                    var pick = choices.splice(num,1) // remove number from array\r\n                    let one = pick;\r\n\r\n                    num = Math.floor(Math.random() * choices.length);\r\n                    let two = choices.splice(num,1)\r\n\r\n                    num = Math.floor(Math.random() * choices.length);\r\n                    let three = choices.splice(num,1)\r\n\r\n\r\n                    tracks = [\r\n                        { name: response.payload.data.tracks[one].name, artist: response.payload.data.tracks[one].artists[0].name, img: response.payload.data.tracks[one].album.images[0].url },\r\n                        { name: response.payload.data.tracks[two].name, artist: response.payload.data.tracks[two].artists[0].name, img: response.payload.data.tracks[two].album.images[0].url },\r\n                        { name: response.payload.data.tracks[three].name, artist: response.payload.data.tracks[three].artists[0].name, img: response.payload.data.tracks[three].album.images[0].url },\r\n                    ]\r\n\r\n                    setList(tracks);\r\n                    setSpotifyLoading(false)\r\n                })\r\n            }\r\n            loaded = true;\r\n        }\r\n    } */\r\n\r\n    useEffect(() => {\r\n        //fetchData();\r\n    }, [user]); //! Important\r\n\r\n    if (list && !spotifyLoading) {\r\n        return (\r\n            <div className=\"SongRecsCard\">\r\n                <h3>You might like...</h3>\r\n\r\n                {list.map((songrec, id) => {\r\n                    return (\r\n                        <div className=\"songrec\" key={id}>\r\n                            <div>\r\n                                <img src={songrec.img} alt=\"\" className='songrecImg' />\r\n                                <div className=\"songname\">\r\n                                    <span>{songrec.name}</span>\r\n                                    <span>{songrec.artist}</span>\r\n                                </div>\r\n                            </div>\r\n                            {/*<button className='button sr-button'></button>*/}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (<img className=\"loadingCircle\" src={loadingCir} alt=\"loading\" />)\r\n    }\r\n}\r\n\r\nexport default SongRecsCard"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAC3B,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,cAAc,QAAQ,qCAAqC;AACpE,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,2BAA2B;AAAA;AAIlD,MAAMC,YAAY,GAAG,MAAM;EAAA;EACvB,MAAM;IAAEC;EAAY,CAAC,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACC,OAAO,CAAC;EAC7D,MAAMC,IAAI,GAAGR,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACG,IAAI,CAACD,IAAI,CAAC;EAEpD,MAAME,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,EAAE;EAClC,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1D,IAAIa,MAAM,GAAG,KAAK;EAGlB,IAAIC,MAAM,GAAG,EAAE;;EAEf;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAQIf,SAAS,CAAC,MAAM;IACZ;EACJ,CAAC,EAAE,CAACO,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEZ,IAAIG,IAAI,IAAI,CAACE,cAAc,EAAE;IACzB,oBACI;MAAK,SAAS,EAAC,cAAc;MAAA,wBACzB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B,EAEzBF,IAAI,CAACM,GAAG,CAAC,CAACC,OAAO,EAAEC,EAAE,KAAK;QACvB,oBACI;UAAK,SAAS,EAAC,SAAS;UAAA,uBACpB;YAAA,wBACI;cAAK,GAAG,EAAED,OAAO,CAACE,GAAI;cAAC,GAAG,EAAC,EAAE;cAAC,SAAS,EAAC;YAAY;cAAA;cAAA;cAAA;YAAA,QAAG,eACvD;cAAK,SAAS,EAAC,UAAU;cAAA,wBACrB;gBAAA,UAAOF,OAAO,CAACG;cAAI;gBAAA;gBAAA;gBAAA;cAAA,QAAQ,eAC3B;gBAAA,UAAOH,OAAO,CAACI;cAAM;gBAAA;gBAAA;gBAAA;cAAA,QAAQ;YAAA;cAAA;cAAA;cAAA;YAAA,QAC3B;UAAA;YAAA;YAAA;YAAA;UAAA;QACJ,GAPoBH,EAAE;UAAA;UAAA;UAAA;QAAA,QAS1B;MAEd,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACA;EAEd,CAAC,MAEI;IACD,oBAAQ;MAAK,SAAS,EAAC,eAAe;MAAC,GAAG,EAAEhB,UAAW;MAAC,GAAG,EAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAC5E;AACJ,CAAC;AAAA,GA7EKC,YAAY;EAAA,QACUJ,WAAW,EACtBA,WAAW,EAEPF,WAAW;AAAA;AAAA,KAJ1BM,YAAY;AA+ElB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}