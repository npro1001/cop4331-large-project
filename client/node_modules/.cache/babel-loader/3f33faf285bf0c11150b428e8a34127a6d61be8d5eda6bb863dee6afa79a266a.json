{"ast":null,"code":"import React, { forwardRef, useRef, useState } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { useId, useUncontrolled, useMergedRef, clamp } from '@mantine/hooks';\nimport { RatingItem } from './RatingItem/RatingItem.js';\nimport useStyles from './Rating.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nfunction roundValueTo(value, to) {\n  var _a;\n  const rounded = Math.round(value / to) * to;\n  const precision = ((_a = `${to}`.split(\".\")[1]) == null ? void 0 : _a.length) || 0;\n  return Number(rounded.toFixed(precision));\n}\nconst defaultProps = {\n  size: \"sm\",\n  getSymbolLabel: value => `${value}`,\n  count: 5,\n  fractions: 1,\n  color: \"yellow\"\n};\nconst Rating = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Rating\", defaultProps, props),\n    {\n      defaultValue,\n      value,\n      emptySymbol,\n      fullSymbol,\n      size,\n      count,\n      fractions,\n      onChange,\n      onHover,\n      getSymbolLabel,\n      name,\n      readOnly,\n      className,\n      classNames,\n      styles,\n      unstyled,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave,\n      highlightSelectedOnly,\n      color,\n      id\n    } = _a,\n    others = __objRest(_a, [\"defaultValue\", \"value\", \"emptySymbol\", \"fullSymbol\", \"size\", \"count\", \"fractions\", \"onChange\", \"onHover\", \"getSymbolLabel\", \"name\", \"readOnly\", \"className\", \"classNames\", \"styles\", \"unstyled\", \"onMouseEnter\", \"onMouseMove\", \"onMouseLeave\", \"highlightSelectedOnly\", \"color\", \"id\"]);\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles(null, {\n    name: \"Rating\",\n    classNames,\n    styles,\n    unstyled\n  });\n  const _name = useId(name);\n  const _id = useId(id);\n  const rootRef = useRef(null);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: 0,\n    onChange\n  });\n  const [hovered, setHovered] = useState(-1);\n  const [isOutside, setOutside] = useState(true);\n  const _fractions = Math.floor(fractions);\n  const _count = Math.floor(count);\n  const decimalUnit = 1 / _fractions;\n  const stableValueRounded = roundValueTo(_value, decimalUnit);\n  const finalValue = hovered !== -1 ? hovered : stableValueRounded;\n  const handleMouseEnter = event => {\n    onMouseEnter == null ? void 0 : onMouseEnter(event);\n    !readOnly && setOutside(false);\n  };\n  const handleMouseMove = event => {\n    onMouseMove == null ? void 0 : onMouseMove(event);\n    if (readOnly) {\n      return;\n    }\n    const {\n      left,\n      right,\n      width\n    } = rootRef.current.getBoundingClientRect();\n    const symbolWidth = width / _count;\n    const hoverPosition = theme.dir === \"rtl\" ? right - event.clientX : event.clientX - left;\n    const hoverValue = hoverPosition / symbolWidth;\n    const rounded = clamp(roundValueTo(hoverValue + decimalUnit / 2, decimalUnit), decimalUnit, _count);\n    setHovered(rounded);\n    rounded !== hovered && (onHover == null ? void 0 : onHover(rounded));\n  };\n  const handleMouseLeave = event => {\n    onMouseLeave == null ? void 0 : onMouseLeave(event);\n    if (readOnly) {\n      return;\n    }\n    setHovered(-1);\n    setOutside(true);\n    hovered !== -1 && (onHover == null ? void 0 : onHover(-1));\n  };\n  const handleItemBlur = () => isOutside && setHovered(-1);\n  const handleChange = event => {\n    const resultedValue = parseFloat(event.target.value);\n    setValue(resultedValue);\n  };\n  const items = Array(_count).fill(0).map((_, index) => {\n    const integerValue = index + 1;\n    const fractionItems = Array.from(new Array(index === 0 ? _fractions + 1 : _fractions));\n    const isGroupActive = !readOnly && Math.ceil(hovered) === integerValue;\n    return /* @__PURE__ */React.createElement(\"div\", {\n      key: integerValue,\n      \"data-active\": isGroupActive,\n      className: classes.symbolGroup\n    }, fractionItems.map((__, fractionIndex) => {\n      const fractionValue = decimalUnit * (index === 0 ? fractionIndex : fractionIndex + 1);\n      const symbolValue = roundValueTo(integerValue - 1 + fractionValue, decimalUnit);\n      return /* @__PURE__ */React.createElement(RatingItem, {\n        key: `${integerValue}-${symbolValue}`,\n        size,\n        getSymbolLabel,\n        emptyIcon: emptySymbol,\n        fullIcon: fullSymbol,\n        full: highlightSelectedOnly ? symbolValue === finalValue : symbolValue <= finalValue,\n        active: symbolValue === finalValue,\n        checked: symbolValue === stableValueRounded,\n        readOnly,\n        fractionValue,\n        value: symbolValue,\n        name: _name,\n        onChange: handleChange,\n        onBlur: handleItemBlur,\n        classNames,\n        styles,\n        unstyled,\n        color,\n        id: `${_id}-${index}-${fractionIndex}`\n      });\n    }));\n  });\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    ref: useMergedRef(rootRef, ref),\n    className: cx(classes.root, className),\n    onMouseMove: handleMouseMove,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave\n  }, others), items);\n});\nRating.displayName = \"@mantine/core/Rating\";\nexport { Rating };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","roundValueTo","to","_a","rounded","Math","round","precision","split","length","Number","toFixed","defaultProps","size","getSymbolLabel","count","fractions","color","Rating","forwardRef","props","ref","useComponentDefaultProps","defaultValue","emptySymbol","fullSymbol","onChange","onHover","name","readOnly","className","classNames","styles","unstyled","onMouseEnter","onMouseMove","onMouseLeave","highlightSelectedOnly","id","others","classes","cx","theme","useStyles","_name","useId","_id","rootRef","useRef","_value","setValue","useUncontrolled","finalValue","hovered","setHovered","useState","isOutside","setOutside","_fractions","floor","_count","decimalUnit","stableValueRounded","handleMouseEnter","event","handleMouseMove","left","right","width","current","getBoundingClientRect","symbolWidth","hoverPosition","dir","clientX","hoverValue","clamp","handleMouseLeave","handleItemBlur","handleChange","resultedValue","parseFloat","items","Array","fill","map","_","index","integerValue","fractionItems","from","isGroupActive","ceil","React","createElement","symbolGroup","__","fractionIndex","fractionValue","symbolValue","RatingItem","emptyIcon","fullIcon","full","active","checked","onBlur","Box","useMergedRef","root","displayName"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\core\\src\\Rating\\Rating.tsx"],"sourcesContent":["import React, { forwardRef, useState, useRef } from 'react';\nimport {\n  DefaultProps,\n  MantineSize,\n  useComponentDefaultProps,\n  Selectors,\n  MantineColor,\n} from '@mantine/styles';\nimport { useUncontrolled, clamp, useMergedRef, useId } from '@mantine/hooks';\nimport { Box } from '../Box';\nimport { RatingItem, RatingItemStylesNames } from './RatingItem/RatingItem';\nimport useStyles from './Rating.styles';\n\nfunction roundValueTo(value: number, to: number) {\n  const rounded = Math.round(value / to) * to;\n  const precision = `${to}`.split('.')[1]?.length || 0;\n  return Number(rounded.toFixed(precision));\n}\n\nexport type RatingStylesNames = Selectors<typeof useStyles> | RatingItemStylesNames;\n\nexport interface RatingProps\n  extends DefaultProps<RatingStylesNames>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'onChange'> {\n  /** Default value for uncontrolled component */\n  defaultValue?: number;\n\n  /** Value for controlled component */\n  value?: number;\n\n  /** Called when value changes */\n  onChange?(value: number): void;\n\n  /** The icon that is displayed when symbol is empty */\n  emptySymbol?: React.ReactNode | ((value: number) => React.ReactNode);\n\n  /** This icon that is displayed when symbol is full */\n  fullSymbol?: React.ReactNode | ((value: number) => React.ReactNode);\n\n  /** Number of fractions each item can be divided into, 1 by default */\n  fractions?: number;\n\n  /** Controls component size */\n  size?: MantineSize;\n\n  /** Number of controls that should be rendered */\n  count?: number;\n\n  /** Called when item is hovered */\n  onHover?(value: number): void;\n\n  /** Function should return labelText for the symbols */\n  getSymbolLabel?: (value: number) => string;\n\n  /** Name of rating, should be unique within the page */\n  name?: string;\n\n  /** If true, you won't be able to interact */\n  readOnly?: boolean;\n\n  /** If true, only the selected symbol will change to full symbol */\n  highlightSelectedOnly?: boolean;\n\n  /** Key of theme.colors or any CSS color value, yellow by default */\n  color?: MantineColor;\n}\n\nconst defaultProps: Partial<RatingProps> = {\n  size: 'sm',\n  getSymbolLabel: (value) => `${value}`,\n  count: 5,\n  fractions: 1,\n  color: 'yellow',\n};\n\nexport const Rating = forwardRef<HTMLInputElement, RatingProps>((props, ref) => {\n  const {\n    defaultValue,\n    value,\n    emptySymbol,\n    fullSymbol,\n    size,\n    count,\n    fractions,\n    onChange,\n    onHover,\n    getSymbolLabel,\n    name,\n    readOnly,\n    className,\n    classNames,\n    styles,\n    unstyled,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    highlightSelectedOnly,\n    color,\n    id,\n    ...others\n  } = useComponentDefaultProps('Rating', defaultProps, props);\n\n  const { classes, cx, theme } = useStyles(null, { name: 'Rating', classNames, styles, unstyled });\n\n  const _name = useId(name);\n  const _id = useId(id);\n  const rootRef = useRef<HTMLDivElement>(null);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: 0,\n    onChange,\n  });\n\n  const [hovered, setHovered] = useState(-1);\n  const [isOutside, setOutside] = useState(true);\n\n  const _fractions = Math.floor(fractions);\n  const _count = Math.floor(count);\n\n  const decimalUnit = 1 / _fractions;\n  const stableValueRounded = roundValueTo(_value, decimalUnit);\n  const finalValue = hovered !== -1 ? hovered : stableValueRounded;\n\n  const handleMouseEnter = (event: React.MouseEvent<HTMLDivElement>) => {\n    onMouseEnter?.(event);\n    !readOnly && setOutside(false);\n  };\n\n  const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    onMouseMove?.(event);\n\n    if (readOnly) {\n      return;\n    }\n\n    const { left, right, width } = rootRef.current.getBoundingClientRect();\n    const symbolWidth = width / _count;\n\n    const hoverPosition = theme.dir === 'rtl' ? right - event.clientX : event.clientX - left;\n    const hoverValue = hoverPosition / symbolWidth;\n\n    const rounded = clamp(\n      roundValueTo(hoverValue + decimalUnit / 2, decimalUnit),\n      decimalUnit,\n      _count\n    );\n\n    setHovered(rounded);\n    rounded !== hovered && onHover?.(rounded);\n  };\n\n  const handleMouseLeave = (event: React.MouseEvent<HTMLDivElement>) => {\n    onMouseLeave?.(event);\n\n    if (readOnly) {\n      return;\n    }\n\n    setHovered(-1);\n    setOutside(true);\n    hovered !== -1 && onHover?.(-1);\n  };\n\n  const handleItemBlur = () => isOutside && setHovered(-1);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const resultedValue = parseFloat(event.target.value);\n    setValue(resultedValue);\n  };\n\n  const items = Array(_count)\n    .fill(0)\n    .map((_, index) => {\n      const integerValue = index + 1;\n      const fractionItems = Array.from(new Array(index === 0 ? _fractions + 1 : _fractions));\n      const isGroupActive = !readOnly && Math.ceil(hovered) === integerValue;\n\n      return (\n        <div key={integerValue} data-active={isGroupActive} className={classes.symbolGroup}>\n          {fractionItems.map((__, fractionIndex) => {\n            const fractionValue = decimalUnit * (index === 0 ? fractionIndex : fractionIndex + 1);\n            const symbolValue = roundValueTo(integerValue - 1 + fractionValue, decimalUnit);\n\n            return (\n              <RatingItem\n                key={`${integerValue}-${symbolValue}`}\n                size={size}\n                getSymbolLabel={getSymbolLabel}\n                emptyIcon={emptySymbol}\n                fullIcon={fullSymbol}\n                full={\n                  highlightSelectedOnly ? symbolValue === finalValue : symbolValue <= finalValue\n                }\n                active={symbolValue === finalValue}\n                checked={symbolValue === stableValueRounded}\n                readOnly={readOnly}\n                fractionValue={fractionValue}\n                value={symbolValue}\n                name={_name}\n                onChange={handleChange}\n                onBlur={handleItemBlur}\n                classNames={classNames}\n                styles={styles}\n                unstyled={unstyled}\n                color={color}\n                id={`${_id}-${index}-${fractionIndex}`}\n              />\n            );\n          })}\n        </div>\n      );\n    });\n\n  return (\n    <Box\n      ref={useMergedRef(rootRef, ref)}\n      className={cx(classes.root, className)}\n      onMouseMove={handleMouseMove}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      {...others}\n    >\n      {items}\n    </Box>\n  );\n});\n\nRating.displayName = '@mantine/core/Rating';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}