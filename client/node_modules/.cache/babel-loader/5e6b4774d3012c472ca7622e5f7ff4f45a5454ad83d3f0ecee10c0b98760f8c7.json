{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.js';\nfunction getScrollPosition() {\n  return typeof window !== \"undefined\" ? {\n    x: window.pageXOffset,\n    y: window.pageYOffset\n  } : {\n    x: 0,\n    y: 0\n  };\n}\nfunction scrollTo(_ref) {\n  let {\n    x,\n    y\n  } = _ref;\n  if (typeof window !== \"undefined\") {\n    const scrollOptions = {\n      behavior: \"smooth\"\n    };\n    if (typeof x === \"number\") {\n      scrollOptions.left = x;\n    }\n    if (typeof y === \"number\") {\n      scrollOptions.top = y;\n    }\n    window.scrollTo(scrollOptions);\n  }\n}\nfunction useWindowScroll() {\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  useWindowEvent(\"scroll\", () => setPosition(getScrollPosition()));\n  useWindowEvent(\"resize\", () => setPosition(getScrollPosition()));\n  useEffect(() => {\n    setPosition(getScrollPosition());\n  }, []);\n  return [position, scrollTo];\n}\nexport { useWindowScroll };","map":{"version":3,"mappings":";;AAEA,SAASA,iBAAiB,GAAG;EAC3B,OAAO,OAAOC,MAAM,KAAK,WAAW,GAAG;IAAEC,CAAC,EAAED,MAAM,CAACE,WAAW;IAAEC,CAAC,EAAEH,MAAM,CAACI;EAAW,CAAE,GAAG;IAAEH,CAAC,EAAE,CAAC;IAAEE,CAAC,EAAE;EAAC,CAAE;AAC1G;AACA,SAASE,QAAQ,OAAW;EAAA,IAAV;IAAEJ,CAAC;IAAEE;EAAC,CAAE;EACxB,IAAI,OAAOH,MAAM,KAAK,WAAW,EAAE;IACjC,MAAMM,aAAa,GAAG;MAAEC,QAAQ,EAAE;IAAQ,CAAE;IAC5C,IAAI,OAAON,CAAC,KAAK,QAAQ,EAAE;MACzBK,aAAa,CAACE,IAAI,GAAGP,CAAC;IAC5B;IACI,IAAI,OAAOE,CAAC,KAAK,QAAQ,EAAE;MACzBG,aAAa,CAACG,GAAG,GAAGN,CAAC;IAC3B;IACIH,MAAM,CAACK,QAAQ,CAACC,aAAa,CAAC;EAClC;AACA;AACO,SAASI,eAAe,GAAG;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC;IAAEZ,CAAC,EAAE,CAAC;IAAEE,CAAC,EAAE;EAAC,CAAE,CAAC;EACxDW,cAAc,CAAC,QAAQ,EAAE,MAAMF,WAAW,CAACb,iBAAiB,EAAE,CAAC,CAAC;EAChEe,cAAc,CAAC,QAAQ,EAAE,MAAMF,WAAW,CAACb,iBAAiB,EAAE,CAAC,CAAC;EAChEgB,SAAS,CAAC,MAAM;IACdH,WAAW,CAACb,iBAAiB,EAAE,CAAC;EACpC,CAAG,EAAE,EAAE,CAAC;EACN,OAAO,CAACY,QAAQ,EAAEN,QAAQ,CAAC;AAC7B","names":["getScrollPosition","window","x","pageXOffset","y","pageYOffset","scrollTo","scrollOptions","behavior","left","top","useWindowScroll","position","setPosition","useState","useWindowEvent","useEffect"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\client\\node_modules\\@mantine\\hooks\\src\\use-window-scroll\\use-window-scroll.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\ninterface ScrollPosition {\n  x: number;\n  y: number;\n}\n\nfunction getScrollPosition(): ScrollPosition {\n  return typeof window !== 'undefined'\n    ? { x: window.pageXOffset, y: window.pageYOffset }\n    : { x: 0, y: 0 };\n}\n\nfunction scrollTo({ x, y }: Partial<ScrollPosition>) {\n  if (typeof window !== 'undefined') {\n    const scrollOptions: ScrollToOptions = { behavior: 'smooth' };\n\n    if (typeof x === 'number') {\n      scrollOptions.left = x;\n    }\n\n    if (typeof y === 'number') {\n      scrollOptions.top = y;\n    }\n\n    window.scrollTo(scrollOptions);\n  }\n}\n\nexport function useWindowScroll() {\n  const [position, setPosition] = useState<ScrollPosition>({ x: 0, y: 0 });\n\n  useWindowEvent('scroll', () => setPosition(getScrollPosition()));\n  useWindowEvent('resize', () => setPosition(getScrollPosition()));\n\n  useEffect(() => {\n    setPosition(getScrollPosition());\n  }, []);\n\n  return [position, scrollTo] as const;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}