{"ast":null,"code":"function size(props) {\n  if (typeof props.size === \"number\") {\n    return props.size;\n  }\n  const computedSize = props.sizes[props.size];\n  return computedSize !== void 0 ? computedSize : props.size || props.sizes.md;\n}\nexport { size };","map":{"version":3,"mappings":"AAAO,SAASA,IAAI,CAACC,KAAK,EAAE;EAC1B,IAAI,OAAOA,KAAK,CAACD,IAAI,KAAK,QAAQ,EAAE;IAClC,OAAOC,KAAK,CAACD,IAAI;EACrB;EACE,MAAME,YAAY,GAAGD,KAAK,CAACE,KAAK,CAACF,KAAK,CAACD,IAAI,CAAC;EAC5C,OAAOE,YAAY,KAAK,KAAK,CAAC,GAAGA,YAAY,GAAGD,KAAK,CAACD,IAAI,IAAIC,KAAK,CAACE,KAAK,CAACC,EAAE;AAC9E","names":["size","props","computedSize","sizes","md"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\styles\\src\\theme\\functions\\fns\\size\\size.ts"],"sourcesContent":["interface GetSize {\n  size: string | number;\n  sizes: Record<string, any>;\n}\n\nexport function size(props: GetSize) {\n  if (typeof props.size === 'number') {\n    return props.size;\n  }\n\n  const computedSize = props.sizes[props.size];\n\n  return computedSize !== undefined ? computedSize : props.size || props.sizes.md;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}