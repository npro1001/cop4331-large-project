{"ast":null,"code":"import { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nfunction getConnection() {\n  if (typeof navigator === \"undefined\") {\n    return {};\n  }\n  const _navigator = navigator;\n  const connection = _navigator.connection || _navigator.mozConnection || _navigator.webkitConnection;\n  if (!connection) {\n    return {};\n  }\n  return {\n    downlink: connection == null ? void 0 : connection.downlink,\n    downlinkMax: connection == null ? void 0 : connection.downlinkMax,\n    effectiveType: connection == null ? void 0 : connection.effectiveType,\n    rtt: connection == null ? void 0 : connection.rtt,\n    saveData: connection == null ? void 0 : connection.saveData,\n    type: connection == null ? void 0 : connection.type\n  };\n}\nfunction useNetwork() {\n  const [status, setStatus] = useState({\n    online: true\n  });\n  const handleConnectionChange = useCallback(() => setStatus(current => __spreadValues(__spreadValues({}, current), getConnection())), []);\n  useWindowEvent(\"online\", () => setStatus(__spreadValues({\n    online: true\n  }, getConnection())));\n  useWindowEvent(\"offline\", () => setStatus(__spreadValues({\n    online: false\n  }, getConnection())));\n  useEffect(() => {\n    const _navigator = navigator;\n    if (_navigator.connection) {\n      setStatus(__spreadValues({\n        online: true\n      }, getConnection()));\n      _navigator.connection.addEventListener(\"change\", handleConnectionChange);\n      return () => _navigator.connection.removeEventListener(\"change\", handleConnectionChange);\n    }\n    return void 0;\n  }, []);\n  return status;\n}\nexport { useNetwork };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","getConnection","navigator","_navigator","connection","mozConnection","webkitConnection","downlink","downlinkMax","effectiveType","rtt","saveData","type","useNetwork","status","setStatus","useState","online","handleConnectionChange","useCallback","current","useWindowEvent","useEffect","addEventListener","removeEventListener"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\hooks\\src\\use-network\\use-network.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\ninterface NetworkStatus {\n  downlink?: number;\n  downlinkMax?: number;\n  effectiveType?: 'slow-2g' | '2g' | '3g' | '4g';\n  rtt?: number;\n  saveData?: boolean;\n  type?: 'bluetooth' | 'cellular' | 'ethernet' | 'wifi' | 'wimax' | 'none' | 'other' | 'unknown';\n}\n\nfunction getConnection(): NetworkStatus {\n  if (typeof navigator === 'undefined') {\n    return {};\n  }\n\n  const _navigator = navigator as any;\n  const connection: any =\n    _navigator.connection || _navigator.mozConnection || _navigator.webkitConnection;\n\n  if (!connection) {\n    return {};\n  }\n\n  return {\n    downlink: connection?.downlink,\n    downlinkMax: connection?.downlinkMax,\n    effectiveType: connection?.effectiveType,\n    rtt: connection?.rtt,\n    saveData: connection?.saveData,\n    type: connection?.type,\n  };\n}\n\nexport function useNetwork() {\n  const [status, setStatus] = useState<{ online: boolean } & NetworkStatus>({\n    online: true,\n  });\n  const handleConnectionChange = useCallback(\n    () => setStatus((current) => ({ ...current, ...getConnection() })),\n    []\n  );\n\n  useWindowEvent('online', () => setStatus({ online: true, ...getConnection() }));\n  useWindowEvent('offline', () => setStatus({ online: false, ...getConnection() }));\n\n  useEffect(() => {\n    const _navigator = navigator as any;\n\n    if (_navigator.connection) {\n      setStatus({ online: true, ...getConnection() });\n      _navigator.connection.addEventListener('change', handleConnectionChange);\n      return () => _navigator.connection.removeEventListener('change', handleConnectionChange);\n    }\n\n    return undefined;\n  }, []);\n\n  return status;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}