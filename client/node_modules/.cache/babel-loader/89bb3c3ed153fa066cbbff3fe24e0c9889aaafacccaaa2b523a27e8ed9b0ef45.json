{"ast":null,"code":"import { themeColor } from '../theme-color/theme-color.js';\nimport { primaryShade } from '../primary-shade/primary-shade.js';\nimport { getGradientColorStops } from './get-gradient-color-stops/get-gradient-color-stops.js';\nfunction linearGradient(deg) {\n  for (var _len = arguments.length, colors = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    colors[_key - 1] = arguments[_key];\n  }\n  return `linear-gradient(${deg}deg, ${getGradientColorStops(colors)})`;\n}\nfunction radialGradient() {\n  for (var _len2 = arguments.length, colors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    colors[_key2] = arguments[_key2];\n  }\n  return `radial-gradient(circle, ${getGradientColorStops(colors)})`;\n}\nfunction gradient(theme) {\n  const getThemeColor = themeColor(theme);\n  const getPrimaryShade = primaryShade(theme);\n  return payload => {\n    const merged = {\n      from: (payload == null ? void 0 : payload.from) || theme.defaultGradient.from,\n      to: (payload == null ? void 0 : payload.to) || theme.defaultGradient.to,\n      deg: (payload == null ? void 0 : payload.deg) || theme.defaultGradient.deg\n    };\n    return `linear-gradient(${merged.deg}deg, ${getThemeColor(merged.from, getPrimaryShade(), false)} 0%, ${getThemeColor(merged.to, getPrimaryShade(), false)} 100%)`;\n  };\n}\nexport { gradient, linearGradient, radialGradient };","map":{"version":3,"mappings":";;;AAGO,SAASA,cAAc,CAACC,GAAG,EAAa;EAAA,kCAARC,MAAM;IAANA,MAAM;EAAA;EAC3C,OAAQ,mBAAkBD,GAAI,QAAOE,qBAAqB,CAACD,MAAM,CAAE,GAAE;AACvE;AACO,SAASE,cAAc,GAAY;EAAA,mCAARF,MAAM;IAANA,MAAM;EAAA;EACtC,OAAQ,2BAA0BC,qBAAqB,CAACD,MAAM,CAAE,GAAE;AACpE;AACO,SAASG,QAAQ,CAACC,KAAK,EAAE;EAC9B,MAAMC,aAAa,GAAGC,UAAU,CAACF,KAAK,CAAC;EACvC,MAAMG,eAAe,GAAGC,YAAY,CAACJ,KAAK,CAAC;EAC3C,OAAQK,OAAO,IAAK;IAClB,MAAMC,MAAM,GAAG;MACbC,IAAI,EAAE,CAACF,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACE,IAAI,KAAKP,KAAK,CAACQ,eAAe,CAACD,IAAI;MAC7EE,EAAE,EAAE,CAACJ,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACI,EAAE,KAAKT,KAAK,CAACQ,eAAe,CAACC,EAAE;MACvEd,GAAG,EAAE,CAACU,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACV,GAAG,KAAKK,KAAK,CAACQ,eAAe,CAACb;IAC7E,CAAK;IACD,OAAQ,mBAAkBW,MAAM,CAACX,GAAI,QAAOM,aAAa,CAACK,MAAM,CAACC,IAAI,EAAEJ,eAAe,EAAE,EAAE,KAAK,CAAE,QAAOF,aAAa,CAACK,MAAM,CAACG,EAAE,EAAEN,eAAe,EAAE,EAAE,KAAK,CAAE,QAAO;EACtK,CAAG;AACH","names":["linearGradient","deg","colors","getGradientColorStops","radialGradient","gradient","theme","getThemeColor","themeColor","getPrimaryShade","primaryShade","payload","merged","from","defaultGradient","to"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\client\\node_modules\\@mantine\\styles\\src\\theme\\functions\\fns\\gradient\\gradient.ts"],"sourcesContent":["import type { MantineThemeBase, MantineGradient } from '../../../types';\nimport { themeColor } from '../theme-color/theme-color';\nimport { primaryShade } from '../primary-shade/primary-shade';\nimport { getGradientColorStops } from './get-gradient-color-stops/get-gradient-color-stops';\n\nexport function linearGradient(deg: number, ...colors: string[]) {\n  return `linear-gradient(${deg}deg, ${getGradientColorStops(colors)})`;\n}\n\nexport function radialGradient(...colors: string[]) {\n  return `radial-gradient(circle, ${getGradientColorStops(colors)})`;\n}\n\nexport function gradient(theme: MantineThemeBase) {\n  const getThemeColor = themeColor(theme);\n  const getPrimaryShade = primaryShade(theme);\n\n  return (payload?: MantineGradient) => {\n    const merged = {\n      from: payload?.from || theme.defaultGradient.from,\n      to: payload?.to || theme.defaultGradient.to,\n      deg: payload?.deg || theme.defaultGradient.deg,\n    };\n\n    return `linear-gradient(${merged.deg}deg, ${getThemeColor(\n      merged.from,\n      getPrimaryShade(),\n      false\n    )} 0%, ${getThemeColor(merged.to, getPrimaryShade(), false)} 100%)`;\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}