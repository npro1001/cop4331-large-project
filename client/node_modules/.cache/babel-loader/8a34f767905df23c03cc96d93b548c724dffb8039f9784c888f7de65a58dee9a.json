{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { createPolymorphicComponent } from '@mantine/utils';\nimport useStyles from './Text.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  variant: \"text\"\n};\nconst _Text = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Text\", defaultProps, props),\n    {\n      className,\n      size,\n      weight,\n      transform,\n      color,\n      align,\n      variant,\n      lineClamp,\n      gradient,\n      inline,\n      inherit,\n      underline,\n      strikethrough,\n      italic,\n      classNames,\n      styles,\n      unstyled,\n      span\n    } = _a,\n    others = __objRest(_a, [\"className\", \"size\", \"weight\", \"transform\", \"color\", \"align\", \"variant\", \"lineClamp\", \"gradient\", \"inline\", \"inherit\", \"underline\", \"strikethrough\", \"italic\", \"classNames\", \"styles\", \"unstyled\", \"span\"]);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    variant,\n    color,\n    size,\n    lineClamp,\n    inline,\n    inherit,\n    underline,\n    strikethrough,\n    italic,\n    weight,\n    transform,\n    align,\n    gradient\n  }, {\n    unstyled,\n    name: \"Text\"\n  });\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    ref,\n    className: cx(classes.root, {\n      [classes.gradient]: variant === \"gradient\"\n    }, className),\n    component: span ? \"span\" : \"div\"\n  }, others));\n});\n_Text.displayName = \"@mantine/core/Text\";\nconst Text = createPolymorphicComponent(_Text);\nexport { Text, _Text };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","defaultProps","variant","_Text","forwardRef","props","ref","_a","useComponentDefaultProps","className","size","weight","transform","color","align","lineClamp","gradient","inline","inherit","underline","strikethrough","italic","classNames","styles","unstyled","span","others","classes","cx","useStyles","name","React","createElement","Box","root","component","displayName","Text","createPolymorphicComponent"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\client\\node_modules\\@mantine\\core\\src\\Text\\Text.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport {\n  DefaultProps,\n  MantineGradient,\n  useComponentDefaultProps,\n  MantineColor,\n  MantineNumberSize,\n} from '@mantine/styles';\nimport { createPolymorphicComponent } from '@mantine/utils';\nimport { Box } from '../Box';\nimport useStyles from './Text.styles';\n\nexport interface TextProps extends DefaultProps {\n  /** Text content */\n  children?: React.ReactNode;\n\n  /** Key of theme.fontSizes or number to set font-size in px */\n  size?: MantineNumberSize;\n\n  /** Key of theme.colors or any valid CSS color */\n  color?: 'dimmed' | MantineColor;\n\n  /** Sets font-weight css property */\n  weight?: React.CSSProperties['fontWeight'];\n\n  /** Sets text-transform css property */\n  transform?: React.CSSProperties['textTransform'];\n\n  /** Sets text-align css property */\n  align?: React.CSSProperties['textAlign'];\n\n  /** Link or text variant */\n  variant?: 'text' | 'link' | 'gradient';\n\n  /** CSS -webkit-line-clamp property */\n  lineClamp?: number;\n\n  /** Sets line-height to 1 for centering */\n  inline?: boolean;\n\n  /** Underline the text */\n  underline?: boolean;\n\n  /** Add strikethrough styles */\n  strikethrough?: boolean;\n\n  /** Adds font-style: italic style */\n  italic?: boolean;\n\n  /** Inherit font properties from parent element */\n  inherit?: boolean;\n\n  /** Controls gradient settings in gradient variant only */\n  gradient?: MantineGradient;\n\n  /** Shorthand for component=\"span\" */\n  span?: boolean;\n}\n\nconst defaultProps: Partial<TextProps> = {\n  variant: 'text',\n};\n\nexport const _Text = forwardRef<HTMLDivElement, TextProps>((props, ref) => {\n  const {\n    className,\n    size,\n    weight,\n    transform,\n    color,\n    align,\n    variant,\n    lineClamp,\n    gradient,\n    inline,\n    inherit,\n    underline,\n    strikethrough,\n    italic,\n    classNames,\n    styles,\n    unstyled,\n    span,\n    ...others\n  } = useComponentDefaultProps('Text', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    {\n      variant,\n      color,\n      size,\n      lineClamp,\n      inline,\n      inherit,\n      underline,\n      strikethrough,\n      italic,\n      weight,\n      transform,\n      align,\n      gradient,\n    },\n    { unstyled, name: 'Text' }\n  );\n\n  return (\n    <Box\n      ref={ref}\n      className={cx(classes.root, { [classes.gradient]: variant === 'gradient' }, className)}\n      component={span ? 'span' : 'div'}\n      {...others}\n    />\n  );\n});\n\n_Text.displayName = '@mantine/core/Text';\n\nexport const Text = createPolymorphicComponent<'div', TextProps>(_Text);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}