{"ast":null,"code":"function getCurveProps(_ref) {\n  let {\n    size,\n    thickness,\n    sum,\n    value,\n    root,\n    offset\n  } = _ref;\n  const radius = (size * 0.9 - thickness * 2) / 2;\n  const deg = Math.PI * radius * 2 / 100;\n  const strokeDasharray = root ? `${(100 - sum) * deg}, ${sum * deg}` : `${value * deg}, ${(100 - value) * deg}`;\n  return {\n    strokeWidth: thickness,\n    cx: size / 2,\n    cy: size / 2,\n    r: radius,\n    transform: root ? `scale(1, -1) translate(0, -${size})` : null,\n    strokeDasharray,\n    strokeDashoffset: root ? 0 : offset\n  };\n}\nexport { getCurveProps };","map":{"version":3,"mappings":"AAAO,SAASA,aAAa,OAAgD;EAAA,IAA/C;IAAEC,IAAI;IAAEC,SAAS;IAAEC,GAAG;IAAEC,KAAK;IAAEC,IAAI;IAAEC;EAAM,CAAE;EACzE,MAAMC,MAAM,GAAG,CAACN,IAAI,GAAG,GAAG,GAAGC,SAAS,GAAG,CAAC,IAAI,CAAC;EAC/C,MAAMM,GAAG,GAAGC,IAAI,CAACC,EAAE,GAAGH,MAAM,GAAG,CAAC,GAAG,GAAG;EACtC,MAAMI,eAAe,GAAGN,IAAI,GAAI,GAAE,CAAC,GAAG,GAAGF,GAAG,IAAIK,GAAI,KAAIL,GAAG,GAAGK,GAAI,EAAC,GAAI,GAAEJ,KAAK,GAAGI,GAAI,KAAI,CAAC,GAAG,GAAGJ,KAAK,IAAII,GAAI,EAAC;EAC9G,OAAO;IACLI,WAAW,EAAEV,SAAS;IACtBW,EAAE,EAAEZ,IAAI,GAAG,CAAC;IACZa,EAAE,EAAEb,IAAI,GAAG,CAAC;IACZc,CAAC,EAAER,MAAM;IACTS,SAAS,EAAEX,IAAI,GAAI,8BAA6BJ,IAAK,GAAE,GAAG,IAAI;IAC9DU,eAAe;IACfM,gBAAgB,EAAEZ,IAAI,GAAG,CAAC,GAAGC;EACjC,CAAG;AACH","names":["getCurveProps","size","thickness","sum","value","root","offset","radius","deg","Math","PI","strokeDasharray","strokeWidth","cx","cy","r","transform","strokeDashoffset"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\client\\node_modules\\@mantine\\core\\src\\RingProgress\\Curve\\get-curve-props.ts"],"sourcesContent":["interface GetCurveProps {\n  size: number;\n  thickness: number;\n  sum: number;\n  value: number;\n  root: boolean;\n  offset: number;\n}\n\nexport function getCurveProps({ size, thickness, sum, value, root, offset }: GetCurveProps) {\n  const radius = (size * 0.9 - thickness * 2) / 2;\n  const deg = (Math.PI * radius * 2) / 100;\n\n  const strokeDasharray = root\n    ? `${(100 - sum) * deg}, ${sum * deg}`\n    : `${value * deg}, ${(100 - value) * deg}`;\n\n  return {\n    strokeWidth: thickness,\n    cx: size / 2,\n    cy: size / 2,\n    r: radius,\n    transform: root ? `scale(1, -1) translate(0, -${size})` : null,\n    strokeDasharray,\n    strokeDashoffset: root ? 0 : offset,\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}