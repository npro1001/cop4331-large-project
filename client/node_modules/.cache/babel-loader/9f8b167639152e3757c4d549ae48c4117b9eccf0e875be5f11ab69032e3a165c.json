{"ast":null,"code":"import React, { forwardRef, useMemo } from 'react';\nimport { getDefaultZIndex, useComponentDefaultProps } from '@mantine/styles';\nimport useStyles from './Indicator.styles.js';\nimport { Machine } from './Machine/Machine.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  position: \"top-end\",\n  offset: 0,\n  inline: false,\n  withBorder: false,\n  disabled: false,\n  showZero: true,\n  processing: false,\n  dot: true,\n  size: 10,\n  overflowCount: 99,\n  radius: 1e3,\n  zIndex: getDefaultZIndex(\"app\")\n};\nconst Indicator = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Indicator\", defaultProps, props),\n    {\n      children,\n      position,\n      offset,\n      size,\n      radius,\n      inline,\n      withBorder,\n      className,\n      color,\n      dot,\n      styles,\n      label,\n      overflowCount,\n      showZero,\n      classNames,\n      disabled,\n      zIndex,\n      unstyled,\n      processing\n    } = _a,\n    others = __objRest(_a, [\"children\", \"position\", \"offset\", \"size\", \"radius\", \"inline\", \"withBorder\", \"className\", \"color\", \"dot\", \"styles\", \"label\", \"overflowCount\", \"showZero\", \"classNames\", \"disabled\", \"zIndex\", \"unstyled\", \"processing\"]);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    position,\n    offset,\n    size,\n    radius,\n    inline,\n    color,\n    withBorder,\n    zIndex,\n    withLabel: !!label\n  }, {\n    name: \"Indicator\",\n    classNames,\n    styles,\n    unstyled\n  });\n  const renderLabel = useMemo(() => {\n    if (typeof label === \"number\") {\n      return /* @__PURE__ */React.createElement(Machine, {\n        value: label,\n        max: overflowCount\n      });\n    }\n    return label;\n  }, [label, overflowCount]);\n  const isShowIndicator = useMemo(() => !disabled && (dot || label != null && !(label <= 0 && !showZero)), [disabled, label, showZero]);\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    ref,\n    className: cx(classes.root, className)\n  }, others), isShowIndicator && /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.indicator, classes.common)\n  }, renderLabel), processing && /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.processing, classes.common)\n  })), children);\n});\nIndicator.displayName = \"@mantine/core/Indicator\";\nexport { Indicator };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","defaultProps","position","offset","inline","withBorder","disabled","showZero","processing","dot","size","overflowCount","radius","zIndex","getDefaultZIndex","Indicator","forwardRef","props","ref","_a","useComponentDefaultProps","children","className","color","styles","label","classNames","unstyled","others","classes","cx","useStyles","withLabel","name","renderLabel","useMemo","React","createElement","Machine","max","isShowIndicator","Box","root","Fragment","indicator","common","displayName"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\core\\src\\Indicator\\Indicator.tsx"],"sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport React, { forwardRef, useMemo } from 'react';\nimport {\n  Selectors,\n  DefaultProps,\n  MantineColor,\n  MantineNumberSize,\n  useComponentDefaultProps,\n  getDefaultZIndex,\n} from '@mantine/styles';\nimport { Box } from '../Box';\nimport { IndicatorPosition } from './Indicator.types';\nimport useStyles, { IndicatorStylesParams } from './Indicator.styles';\nimport { Machine } from './Machine/Machine';\n\nexport type IndicatorStylesNames = Selectors<typeof useStyles>;\n\nexport interface IndicatorProps\n  extends DefaultProps<IndicatorStylesNames, IndicatorStylesParams>,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Element that should have an indicator */\n  children: React.ReactNode;\n\n  /** Indicator position relative to child element */\n  position?: IndicatorPosition;\n\n  /** Changes position offset, usually used when element has border-radius */\n  offset?: number;\n\n  /** Determines whether indicator container should be an inline element */\n  inline?: boolean;\n\n  /** Size in px */\n  size?: number;\n\n  /** Indicator label */\n  label?: React.ReactNode;\n\n  /** Indicator count overflowCount */\n  overflowCount?: number;\n\n  dot?: boolean;\n\n  /** border-radius from theme.radius or number value to set radius in px */\n  radius?: MantineNumberSize;\n\n  /** Color from theme.colors or any other valid CSS color value */\n  color?: MantineColor;\n\n  /** Determines whether indicator should have border */\n  withBorder?: boolean;\n\n  /** When component is disabled it renders children without indicator */\n  disabled?: boolean;\n\n  /** When showZero is true and label is zero  renders children with indicator*/\n  showZero?: boolean;\n\n  /** Indicator processing animation */\n  processing?: boolean;\n\n  /** Indicator z-index */\n  zIndex?: React.CSSProperties['zIndex'];\n}\n\nconst defaultProps: Partial<IndicatorProps> = {\n  position: 'top-end',\n  offset: 0,\n  inline: false,\n  withBorder: false,\n  disabled: false,\n  showZero: true,\n  processing: false,\n  dot: true,\n  size: 10,\n  overflowCount: 99,\n  radius: 1000,\n  zIndex: getDefaultZIndex('app'),\n};\n\nexport const Indicator = forwardRef<HTMLDivElement, IndicatorProps>((props, ref) => {\n  const {\n    children,\n    position,\n    offset,\n    size,\n    radius,\n    inline,\n    withBorder,\n    className,\n    color,\n    dot,\n    styles,\n    label,\n    overflowCount,\n    showZero,\n    classNames,\n    disabled,\n    zIndex,\n    unstyled,\n    processing,\n    ...others\n  } = useComponentDefaultProps('Indicator', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    { position, offset, size, radius, inline, color, withBorder, zIndex, withLabel: !!label },\n    { name: 'Indicator', classNames, styles, unstyled }\n  );\n\n  const renderLabel = useMemo(() => {\n    if (typeof label === 'number') {\n      return <Machine value={label} max={overflowCount} />;\n    }\n    return label;\n  }, [label, overflowCount]);\n\n  const isShowIndicator = useMemo(\n    () => !disabled && (dot || (label != null && !(label <= 0 && !showZero))),\n    [disabled, label, showZero]\n  );\n\n  return (\n    <Box ref={ref} className={cx(classes.root, className)} {...others}>\n      {isShowIndicator && (\n        <>\n          <div className={cx(classes.indicator, classes.common)}>{renderLabel}</div>\n          {processing && <div className={cx(classes.processing, classes.common)} />}\n        </>\n      )}\n      {children}\n    </Box>\n  );\n});\n\nIndicator.displayName = '@mantine/core/Indicator';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}