{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { ChipGroup } from './ChipGroup/ChipGroup.js';\nimport { useChipGroup } from './ChipGroup.context.js';\nimport useStyles from './Chip.styles.js';\nimport { extractSystemStyles } from '../Box/style-system-props/extract-system-styles/extract-system-styles.js';\nimport { Box } from '../Box/Box.js';\nimport { CheckIcon } from '../Checkbox/CheckboxIcon.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  type: \"checkbox\",\n  size: \"sm\",\n  radius: \"xl\",\n  variant: \"outline\"\n};\nconst Chip = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Chip\", defaultProps, props),\n    {\n      radius,\n      type,\n      size,\n      variant,\n      disabled,\n      id,\n      color,\n      children,\n      className,\n      classNames,\n      style,\n      styles,\n      checked,\n      defaultChecked,\n      onChange,\n      sx,\n      wrapperProps,\n      value,\n      unstyled\n    } = _a,\n    others = __objRest(_a, [\"radius\", \"type\", \"size\", \"variant\", \"disabled\", \"id\", \"color\", \"children\", \"className\", \"classNames\", \"style\", \"styles\", \"checked\", \"defaultChecked\", \"onChange\", \"sx\", \"wrapperProps\", \"value\", \"unstyled\"]);\n  const ctx = useChipGroup();\n  const uuid = useId(id);\n  const {\n    systemStyles,\n    rest\n  } = extractSystemStyles(others);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    radius,\n    size,\n    color\n  }, {\n    classNames,\n    styles,\n    unstyled,\n    name: \"Chip\"\n  });\n  const [_value, setValue] = useUncontrolled({\n    value: checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange\n  });\n  const contextProps = ctx ? {\n    checked: ctx.isChipSelected(value),\n    onChange: ctx.onChange,\n    type: ctx.multiple ? \"checkbox\" : \"radio\"\n  } : {};\n  const _checked = contextProps.checked || _value;\n  return /* @__PURE__ */React.createElement(Box, __spreadValues(__spreadValues({\n    className: cx(classes.root, className),\n    style,\n    sx\n  }, systemStyles), wrapperProps), /* @__PURE__ */React.createElement(\"input\", __spreadValues(__spreadValues({\n    type,\n    className: classes.input,\n    checked: _checked,\n    onChange: event => setValue(event.currentTarget.checked),\n    id: uuid,\n    disabled,\n    ref,\n    value\n  }, contextProps), rest)), /* @__PURE__ */React.createElement(\"label\", {\n    htmlFor: uuid,\n    \"data-checked\": _checked || void 0,\n    \"data-disabled\": disabled || void 0,\n    \"data-variant\": variant,\n    className: classes.label\n  }, _checked && /* @__PURE__ */React.createElement(\"span\", {\n    className: classes.iconWrapper\n  }, /* @__PURE__ */React.createElement(CheckIcon, {\n    className: classes.checkIcon\n  })), children));\n});\nChip.displayName = \"@mantine/core/Chip\";\nChip.Group = ChipGroup;\nexport { Chip };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","defaultProps","type","size","radius","variant","Chip","forwardRef","props","ref","_a","useComponentDefaultProps","disabled","id","color","children","className","classNames","style","styles","checked","defaultChecked","onChange","sx","wrapperProps","unstyled","others","ctx","useChipGroup","uuid","useId","systemStyles","rest","extractSystemStyles","classes","cx","useStyles","name","_value","setValue","useUncontrolled","defaultValue","finalValue","contextProps","isChipSelected","multiple","_checked","React","createElement","Box","root","input","event","currentTarget","htmlFor","label","iconWrapper","CheckIcon","checkIcon","displayName","Group","ChipGroup"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\core\\src\\Chip\\Chip.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineSize,\n  MantineColor,\n  Selectors,\n  useComponentDefaultProps,\n} from '@mantine/styles';\nimport { ForwardRefWithStaticComponents } from '@mantine/utils';\nimport { Box, extractSystemStyles } from '../Box';\nimport { CheckIcon } from '../Checkbox';\nimport { ChipGroup } from './ChipGroup/ChipGroup';\nimport { useChipGroup } from './ChipGroup.context';\nimport useStyles, { ChipStylesParams } from './Chip.styles';\n\nexport type ChipStylesNames = Selectors<typeof useStyles>;\n\nexport interface ChipProps\n  extends DefaultProps<ChipStylesNames, ChipStylesParams>,\n    Omit<React.ComponentPropsWithRef<'input'>, 'size' | 'onChange'> {\n  /** Chip radius from theme or number to set value in px */\n  radius?: MantineNumberSize;\n\n  /** Predefined chip size */\n  size?: MantineSize;\n\n  /** Chip input type */\n  type?: 'radio' | 'checkbox';\n\n  /** Controls chip appearance, defaults to filled with dark theme and to outline in light theme */\n  variant?: 'outline' | 'filled';\n\n  /** Chip label */\n  children: React.ReactNode;\n\n  /** Checked state for controlled component */\n  checked?: boolean;\n\n  /** Default value for uncontrolled component */\n  defaultChecked?: boolean;\n\n  /** Calls when checked state changes */\n  onChange?(checked: boolean): void;\n\n  /** Active color from theme, defaults to theme.primaryColor */\n  color?: MantineColor;\n\n  /** Static id to bind input with label */\n  id?: string;\n\n  /** Props spread to wrapper element */\n  wrapperProps?: Record<string, any>;\n}\n\nconst defaultProps: Partial<ChipProps> = {\n  type: 'checkbox',\n  size: 'sm',\n  radius: 'xl',\n  variant: 'outline',\n};\n\ntype ChipComponent = ForwardRefWithStaticComponents<ChipProps, { Group: typeof ChipGroup }>;\n\nexport const Chip: ChipComponent = forwardRef<HTMLInputElement, ChipProps>((props, ref) => {\n  const {\n    radius,\n    type,\n    size,\n    variant,\n    disabled,\n    id,\n    color,\n    children,\n    className,\n    classNames,\n    style,\n    styles,\n    checked,\n    defaultChecked,\n    onChange,\n    sx,\n    wrapperProps,\n    value,\n    unstyled,\n    ...others\n  } = useComponentDefaultProps('Chip', defaultProps, props);\n  const ctx = useChipGroup();\n\n  const uuid = useId(id);\n  const { systemStyles, rest } = extractSystemStyles(others);\n  const { classes, cx } = useStyles(\n    { radius, size, color },\n    { classNames, styles, unstyled, name: 'Chip' }\n  );\n\n  const [_value, setValue] = useUncontrolled({\n    value: checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange,\n  });\n\n  const contextProps = ctx\n    ? {\n        checked: ctx.isChipSelected(value as string),\n        onChange: ctx.onChange,\n        type: ctx.multiple ? 'checkbox' : 'radio',\n      }\n    : {};\n  const _checked = contextProps.checked || _value;\n\n  return (\n    <Box\n      className={cx(classes.root, className)}\n      style={style}\n      sx={sx}\n      {...systemStyles}\n      {...wrapperProps}\n    >\n      <input\n        type={type}\n        className={classes.input}\n        checked={_checked}\n        onChange={(event) => setValue(event.currentTarget.checked)}\n        id={uuid}\n        disabled={disabled}\n        ref={ref}\n        value={value}\n        {...contextProps}\n        {...rest}\n      />\n      <label\n        htmlFor={uuid}\n        data-checked={_checked || undefined}\n        data-disabled={disabled || undefined}\n        data-variant={variant}\n        className={classes.label}\n      >\n        {_checked && (\n          <span className={classes.iconWrapper}>\n            <CheckIcon className={classes.checkIcon} />\n          </span>\n        )}\n        {children}\n      </label>\n    </Box>\n  );\n}) as any;\n\nChip.displayName = '@mantine/core/Chip';\nChip.Group = ChipGroup;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}