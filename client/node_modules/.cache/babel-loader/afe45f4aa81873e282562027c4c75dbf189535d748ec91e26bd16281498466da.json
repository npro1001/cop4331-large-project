{"ast":null,"code":"import { configureStore, createListenerMiddleware, isAnyOf } from '@reduxjs/toolkit';\nimport authReducer, { updateUser, followUser, unfollowUser, uploadPFP, putTopArtist } from '../features/auth/authSlice';\nimport spotifyReducer from '../features/spotify/spotifySlice';\nimport postReducer, { likePost, unlikePost } from '../features/post/postSlice';\nexport const listenerMiddleware = createListenerMiddleware();\nlistenerMiddleware.startListening({\n  matcher: isAnyOf(updateUser, followUser, unfollowUser, uploadPFP, putTopArtist, likePost, unlikePost),\n  effect: async (matcher, listenerApi) => localStorage.setItem(\"user\", JSON.stringify(listenerApi.getState().auth.user))\n});\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    spotify: spotifyReducer,\n    post: postReducer\n  },\n  // middleware: (getDefaultMiddleware) => getDefaultMiddleware({serializableCheck: false,}),\n  middleware: getDefaultMiddleware => [listenerMiddleware.middleware, ...getDefaultMiddleware({\n    serializableCheck: false\n  })] //?\n});","map":{"version":3,"names":["configureStore","createListenerMiddleware","isAnyOf","authReducer","updateUser","followUser","unfollowUser","uploadPFP","putTopArtist","spotifyReducer","postReducer","likePost","unlikePost","listenerMiddleware","startListening","matcher","effect","listenerApi","localStorage","setItem","JSON","stringify","getState","auth","user","store","reducer","spotify","post","middleware","getDefaultMiddleware","serializableCheck"],"sources":["C:/Users/rff96/Documents/GitHub/cop4331-large-project/client/src/app/store.js"],"sourcesContent":["import { configureStore, createListenerMiddleware, isAnyOf } from '@reduxjs/toolkit';\r\nimport authReducer, { updateUser, followUser, unfollowUser, uploadPFP, putTopArtist } from '../features/auth/authSlice';\r\nimport spotifyReducer from '../features/spotify/spotifySlice';\r\nimport postReducer, {likePost, unlikePost} from '../features/post/postSlice';\r\n\r\nexport const listenerMiddleware = createListenerMiddleware();\r\nlistenerMiddleware.startListening({\r\n  matcher: isAnyOf(updateUser, followUser, unfollowUser, uploadPFP, putTopArtist, likePost, unlikePost),\r\n  effect: async (matcher, listenerApi) =>\r\n    localStorage.setItem(\"user\", JSON.stringify(listenerApi.getState().auth.user))\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    spotify: spotifyReducer,\r\n    post: postReducer\r\n  },\r\n  // middleware: (getDefaultMiddleware) => getDefaultMiddleware({serializableCheck: false,}),\r\n  middleware: (getDefaultMiddleware) => [\r\n    listenerMiddleware.middleware,\r\n    ...getDefaultMiddleware({serializableCheck: false})] //?\r\n  });\r\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,wBAAwB,EAAEC,OAAO,QAAQ,kBAAkB;AACpF,OAAOC,WAAW,IAAIC,UAAU,EAAEC,UAAU,EAAEC,YAAY,EAAEC,SAAS,EAAEC,YAAY,QAAQ,4BAA4B;AACvH,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,WAAW,IAAGC,QAAQ,EAAEC,UAAU,QAAO,4BAA4B;AAE5E,OAAO,MAAMC,kBAAkB,GAAGZ,wBAAwB,EAAE;AAC5DY,kBAAkB,CAACC,cAAc,CAAC;EAChCC,OAAO,EAAEb,OAAO,CAACE,UAAU,EAAEC,UAAU,EAAEC,YAAY,EAAEC,SAAS,EAAEC,YAAY,EAAEG,QAAQ,EAAEC,UAAU,CAAC;EACrGI,MAAM,EAAE,OAAOD,OAAO,EAAEE,WAAW,KACjCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW,CAACK,QAAQ,EAAE,CAACC,IAAI,CAACC,IAAI,CAAC;AACjF,CAAC,CAAC;AAEF,OAAO,MAAMC,KAAK,GAAGzB,cAAc,CAAC;EAClC0B,OAAO,EAAE;IACPH,IAAI,EAAEpB,WAAW;IACjBwB,OAAO,EAAElB,cAAc;IACvBmB,IAAI,EAAElB;EACR,CAAC;EACD;EACAmB,UAAU,EAAGC,oBAAoB,IAAK,CACpCjB,kBAAkB,CAACgB,UAAU,EAC7B,GAAGC,oBAAoB,CAAC;IAACC,iBAAiB,EAAE;EAAK,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}