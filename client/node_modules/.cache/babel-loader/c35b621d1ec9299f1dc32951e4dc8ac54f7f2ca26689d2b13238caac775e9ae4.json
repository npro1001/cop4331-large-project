{"ast":null,"code":"import { useEffect } from 'react';\nimport { getHotkeyMatcher } from './parse-hotkey.js';\nexport { getHotkeyHandler } from './parse-hotkey.js';\nfunction shouldFireEvent(event) {\n  if (event.target instanceof HTMLElement) {\n    return !event.target.isContentEditable && ![\"INPUT\", \"TEXTAREA\", \"SELECT\"].includes(event.target.tagName);\n  }\n  return true;\n}\nfunction useHotkeys(hotkeys) {\n  useEffect(() => {\n    const keydownListener = event => {\n      hotkeys.forEach(_ref => {\n        let [hotkey, handler] = _ref;\n        if (getHotkeyMatcher(hotkey)(event) && shouldFireEvent(event)) {\n          event.preventDefault();\n          handler(event);\n        }\n      });\n    };\n    document.documentElement.addEventListener(\"keydown\", keydownListener);\n    return () => document.documentElement.removeEventListener(\"keydown\", keydownListener);\n  }, [hotkeys]);\n}\nexport { useHotkeys };","map":{"version":3,"mappings":";;;AAGA,SAASA,eAAe,CAACC,KAAK,EAAE;EAC9B,IAAIA,KAAK,CAACC,MAAM,YAAYC,WAAW,EAAE;IACvC,OAAO,CAACF,KAAK,CAACC,MAAM,CAACE,iBAAiB,IAAI,CAAC,CAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAACJ,KAAK,CAACC,MAAM,CAACI,OAAO,CAAC;EAC7G;EACE,OAAO,IAAI;AACb;AACO,SAASC,UAAU,CAACC,OAAO,EAAE;EAClCC,SAAS,CAAC,MAAM;IACd,MAAMC,eAAe,GAAIT,KAAK,IAAK;MACjCO,OAAO,CAACG,OAAO,CAAC,QAAuB;QAAA,IAAtB,CAACC,MAAM,EAAEC,OAAO,CAAC;QAChC,IAAIC,gBAAgB,CAACF,MAAM,CAAC,CAACX,KAAK,CAAC,IAAID,eAAe,CAACC,KAAK,CAAC,EAAE;UAC7DA,KAAK,CAACc,cAAc,EAAE;UACtBF,OAAO,CAACZ,KAAK,CAAC;QACxB;MACA,CAAO,CAAC;IACR,CAAK;IACDe,QAAQ,CAACC,eAAe,CAACC,gBAAgB,CAAC,SAAS,EAAER,eAAe,CAAC;IACrE,OAAO,MAAMM,QAAQ,CAACC,eAAe,CAACE,mBAAmB,CAAC,SAAS,EAAET,eAAe,CAAC;EACzF,CAAG,EAAE,CAACF,OAAO,CAAC,CAAC;AACf","names":["shouldFireEvent","event","target","HTMLElement","isContentEditable","includes","tagName","useHotkeys","hotkeys","useEffect","keydownListener","forEach","hotkey","handler","getHotkeyMatcher","preventDefault","document","documentElement","addEventListener","removeEventListener"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\hooks\\src\\use-hotkeys\\use-hotkeys.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport { getHotkeyMatcher, getHotkeyHandler } from './parse-hotkey';\n\nexport { getHotkeyHandler };\n\nexport type HotkeyItem = [string, (event: KeyboardEvent) => void];\n\nfunction shouldFireEvent(event: KeyboardEvent) {\n  if (event.target instanceof HTMLElement) {\n    return (\n      !event.target.isContentEditable &&\n      !['INPUT', 'TEXTAREA', 'SELECT'].includes(event.target.tagName)\n    );\n  }\n  return true;\n}\n\nexport function useHotkeys(hotkeys: HotkeyItem[]) {\n  useEffect(() => {\n    const keydownListener = (event: KeyboardEvent) => {\n      hotkeys.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(event) && shouldFireEvent(event)) {\n          event.preventDefault();\n          handler(event);\n        }\n      });\n    };\n\n    document.documentElement.addEventListener('keydown', keydownListener);\n    return () => document.documentElement.removeEventListener('keydown', keydownListener);\n  }, [hotkeys]);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}