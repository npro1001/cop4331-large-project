{"ast":null,"code":"import { useMantineTheme, useCss } from '@mantine/styles';\nimport { getSystemStyles } from '../style-system-props/get-system-styles/get-system-styles.js';\nfunction extractSx(sx, theme) {\n  return typeof sx === \"function\" ? sx(theme) : sx;\n}\nfunction useSx(sx, systemProps, className) {\n  const theme = useMantineTheme();\n  const {\n    css,\n    cx\n  } = useCss();\n  if (Array.isArray(sx)) {\n    return cx(className, css(getSystemStyles(systemProps, theme)), sx.map(partial => css(extractSx(partial, theme))));\n  }\n  return cx(className, css(extractSx(sx, theme)), css(getSystemStyles(systemProps, theme)));\n}\nexport { useSx };","map":{"version":3,"mappings":";;AAKA,SAASA,SAAS,CAACC,EAAE,EAAEC,KAAK,EAAE;EAC5B,OAAO,OAAOD,EAAE,KAAK,UAAU,GAAGA,EAAE,CAACC,KAAK,CAAC,GAAGD,EAAE;AAClD;AACO,SAASE,KAAK,CAACF,EAAE,EAAEG,WAAW,EAAEC,SAAS,EAAE;EAChD,MAAMH,KAAK,GAAGI,eAAe,EAAE;EAC/B,MAAM;IAAEC,GAAG;IAAEC;EAAE,CAAE,GAAGC,MAAM,EAAE;EAC5B,IAAIC,KAAK,CAACC,OAAO,CAACV,EAAE,CAAC,EAAE;IACrB,OAAOO,EAAE,CAACH,SAAS,EAAEE,GAAG,CAACK,eAAe,CAACR,WAAW,EAAEF,KAAK,CAAC,CAAC,EAAED,EAAE,CAACY,GAAG,CAAEC,OAAO,IAAKP,GAAG,CAACP,SAAS,CAACc,OAAO,EAAEZ,KAAK,CAAC,CAAC,CAAC,CAAC;EACvH;EACE,OAAOM,EAAE,CAACH,SAAS,EAAEE,GAAG,CAACP,SAAS,CAACC,EAAE,EAAEC,KAAK,CAAC,CAAC,EAAEK,GAAG,CAACK,eAAe,CAACR,WAAW,EAAEF,KAAK,CAAC,CAAC,CAAC;AAC3F","names":["extractSx","sx","theme","useSx","systemProps","className","useMantineTheme","css","cx","useCss","Array","isArray","getSystemStyles","map","partial"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\core\\src\\Box\\use-sx\\use-sx.ts"],"sourcesContent":["import {\n  MantineStyleSystemProps,\n  MantineTheme,\n  Sx,\n  useCss,\n  useMantineTheme,\n} from '@mantine/styles';\nimport { getSystemStyles } from '../style-system-props/get-system-styles/get-system-styles';\n\nfunction extractSx(sx: Sx, theme: MantineTheme) {\n  return typeof sx === 'function' ? sx(theme) : sx;\n}\n\nexport function useSx(sx: Sx | Sx[], systemProps: MantineStyleSystemProps, className: string) {\n  const theme = useMantineTheme();\n  const { css, cx } = useCss();\n\n  if (Array.isArray(sx)) {\n    return cx(\n      className,\n      css(getSystemStyles(systemProps, theme)),\n      sx.map((partial) => css(extractSx(partial, theme)))\n    );\n  }\n\n  return cx(className, css(extractSx(sx, theme)), css(getSystemStyles(systemProps, theme)));\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}