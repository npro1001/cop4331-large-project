{"ast":null,"code":"function filterData(_ref) {\n  let {\n    data,\n    searchable,\n    limit,\n    searchValue,\n    filter,\n    value,\n    filterDataOnExactSearchMatch\n  } = _ref;\n  if (!searchable) {\n    return data;\n  }\n  const selected = value != null ? data.find(item => item.value === value) || null : null;\n  if (selected && !filterDataOnExactSearchMatch && (selected == null ? void 0 : selected.label) === searchValue) {\n    return data;\n  }\n  const result = [];\n  for (let i = 0; i < data.length; i += 1) {\n    if (filter(searchValue, data[i])) {\n      result.push(data[i]);\n    }\n    if (result.length >= limit) {\n      break;\n    }\n  }\n  return result;\n}\nexport { filterData };","map":{"version":3,"mappings":"AAAO,SAASA,UAAU,OAQvB;EAAA,IARwB;IACzBC,IAAI;IACJC,UAAU;IACVC,KAAK;IACLC,WAAW;IACXC,MAAM;IACNC,KAAK;IACLC;EACF,CAAC;EACC,IAAI,CAACL,UAAU,EAAE;IACf,OAAOD,IAAI;EACf;EACE,MAAMO,QAAQ,GAAGF,KAAK,IAAI,IAAI,GAAGL,IAAI,CAACQ,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACJ,KAAK,KAAKA,KAAK,CAAC,IAAI,IAAI,GAAG,IAAI;EACzF,IAAIE,QAAQ,IAAI,CAACD,4BAA4B,IAAI,CAACC,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACG,KAAK,MAAMP,WAAW,EAAE;IAC7G,OAAOH,IAAI;EACf;EACE,MAAMW,MAAM,GAAG,EAAE;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,IAAI,CAACa,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACvC,IAAIR,MAAM,CAACD,WAAW,EAAEH,IAAI,CAACY,CAAC,CAAC,CAAC,EAAE;MAChCD,MAAM,CAACG,IAAI,CAACd,IAAI,CAACY,CAAC,CAAC,CAAC;IAC1B;IACI,IAAID,MAAM,CAACE,MAAM,IAAIX,KAAK,EAAE;MAC1B;IACN;EACA;EACE,OAAOS,MAAM;AACf","names":["filterData","data","searchable","limit","searchValue","filter","value","filterDataOnExactSearchMatch","selected","find","item","label","result","i","length","push"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\core\\src\\Select\\filter-data\\filter-data.ts"],"sourcesContent":["import type { SelectItem } from '../types';\n\ninterface FilterData {\n  data: SelectItem[];\n  limit: number;\n  searchable: boolean;\n  searchValue: string;\n  filterDataOnExactSearchMatch: boolean;\n  value: string;\n  filter(value: string, item: SelectItem): boolean;\n}\n\nexport function filterData({\n  data,\n  searchable,\n  limit,\n  searchValue,\n  filter,\n  value,\n  filterDataOnExactSearchMatch,\n}: FilterData) {\n  if (!searchable) {\n    return data;\n  }\n\n  const selected = value != null ? data.find((item) => item.value === value) || null : null;\n\n  if (selected && !filterDataOnExactSearchMatch && selected?.label === searchValue) {\n    return data;\n  }\n\n  const result = [];\n\n  for (let i = 0; i < data.length; i += 1) {\n    if (filter(searchValue, data[i])) {\n      result.push(data[i]);\n    }\n\n    if (result.length >= limit) {\n      break;\n    }\n  }\n\n  return result;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}