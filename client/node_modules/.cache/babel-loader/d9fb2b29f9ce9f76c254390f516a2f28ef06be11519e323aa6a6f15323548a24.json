{"ast":null,"code":"import { useRef, useEffect } from 'react';\nconst DEFAULT_EVENTS = [\"mousedown\", \"touchstart\"];\nfunction useClickOutside(handler, events, nodes) {\n  const ref = useRef();\n  useEffect(() => {\n    const listener = event => {\n      const {\n        target\n      } = event != null ? event : {};\n      if (Array.isArray(nodes)) {\n        const shouldIgnore = (target == null ? void 0 : target.hasAttribute(\"data-ignore-outside-clicks\")) || !document.body.contains(target);\n        const shouldTrigger = nodes.every(node => !!node && !node.contains(target));\n        shouldTrigger && !shouldIgnore && handler();\n      } else if (ref.current && !ref.current.contains(target)) {\n        handler();\n      }\n    };\n    (events || DEFAULT_EVENTS).forEach(fn => document.addEventListener(fn, listener));\n    return () => {\n      (events || DEFAULT_EVENTS).forEach(fn => document.removeEventListener(fn, listener));\n    };\n  }, [ref, handler, nodes]);\n  return ref;\n}\nexport { useClickOutside };","map":{"version":3,"mappings":";AACA,MAAMA,cAAc,GAAG,CAAC,WAAW,EAAE,YAAY,CAAC;AAC3C,SAASC,eAAe,CAACC,OAAO,EAAEC,MAAM,EAAEC,KAAK,EAAE;EACtD,MAAMC,GAAG,GAAGC,MAAM,EAAE;EACpBC,SAAS,CAAC,MAAM;IACd,MAAMC,QAAQ,GAAIC,KAAK,IAAK;MAC1B,MAAM;QAAEC;MAAM,CAAE,GAAGD,KAAK,IAAI,IAAI,GAAGA,KAAK,GAAG,EAAE;MAC7C,IAAIE,KAAK,CAACC,OAAO,CAACR,KAAK,CAAC,EAAE;QACxB,MAAMS,YAAY,GAAG,CAACH,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACI,YAAY,CAAC,4BAA4B,CAAC,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAACP,MAAM,CAAC;QACrI,MAAMQ,aAAa,GAAGd,KAAK,CAACe,KAAK,CAAEC,IAAI,IAAK,CAAC,CAACA,IAAI,IAAI,CAACA,IAAI,CAACH,QAAQ,CAACP,MAAM,CAAC,CAAC;QAC7EQ,aAAa,IAAI,CAACL,YAAY,IAAIX,OAAO,EAAE;MACnD,CAAO,MAAM,IAAIG,GAAG,CAACgB,OAAO,IAAI,CAAChB,GAAG,CAACgB,OAAO,CAACJ,QAAQ,CAACP,MAAM,CAAC,EAAE;QACvDR,OAAO,EAAE;MACjB;IACA,CAAK;IACD,CAACC,MAAM,IAAIH,cAAc,EAAEsB,OAAO,CAAEC,EAAE,IAAKR,QAAQ,CAACS,gBAAgB,CAACD,EAAE,EAAEf,QAAQ,CAAC,CAAC;IACnF,OAAO,MAAM;MACX,CAACL,MAAM,IAAIH,cAAc,EAAEsB,OAAO,CAAEC,EAAE,IAAKR,QAAQ,CAACU,mBAAmB,CAACF,EAAE,EAAEf,QAAQ,CAAC,CAAC;IAC5F,CAAK;EACL,CAAG,EAAE,CAACH,GAAG,EAAEH,OAAO,EAAEE,KAAK,CAAC,CAAC;EACzB,OAAOC,GAAG;AACZ","names":["DEFAULT_EVENTS","useClickOutside","handler","events","nodes","ref","useRef","useEffect","listener","event","target","Array","isArray","shouldIgnore","hasAttribute","document","body","contains","shouldTrigger","every","node","current","forEach","fn","addEventListener","removeEventListener"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\client\\node_modules\\@mantine\\hooks\\src\\use-click-outside\\use-click-outside.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nconst DEFAULT_EVENTS = ['mousedown', 'touchstart'];\n\nexport function useClickOutside<T extends HTMLElement = any>(\n  handler: () => void,\n  events?: string[] | null,\n  nodes?: HTMLElement[]\n) {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    const listener = (event: any) => {\n      const { target } = event ?? {};\n      if (Array.isArray(nodes)) {\n        const shouldIgnore =\n          target?.hasAttribute('data-ignore-outside-clicks') || !document.body.contains(target);\n        const shouldTrigger = nodes.every((node) => !!node && !node.contains(target));\n        shouldTrigger && !shouldIgnore && handler();\n      } else if (ref.current && !ref.current.contains(target)) {\n        handler();\n      }\n    };\n\n    (events || DEFAULT_EVENTS).forEach((fn) => document.addEventListener(fn, listener));\n\n    return () => {\n      (events || DEFAULT_EVENTS).forEach((fn) => document.removeEventListener(fn, listener));\n    };\n  }, [ref, handler, nodes]);\n\n  return ref;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}