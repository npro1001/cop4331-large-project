{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rff96\\\\Documents\\\\GitHub\\\\cop4331-large-project\\\\client\\\\src\\\\components\\\\SongCard\\\\SongCard.jsx\";\nimport React from 'react';\nimport './SongCard.css';\nimport styled from \"styled-components\";\nimport { Howl } from \"howler\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar audio = null;\n// id?\nconst SongCard = _ref => {\n  let {\n    name,\n    artist1,\n    image,\n    url\n  } = _ref;\n  const soundPlay = () => {\n    //check if its already playing, if it is then stop\n    if (audio != null) {\n      audio.stop();\n      audio.unload();\n      audio = null;\n    }\n\n    //if not play the song\n    else {\n      audio = new Howl({\n        src: [url],\n        html5: true\n      });\n      audio.play();\n      audio.fade(2.0, 0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SongCard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: soundPlay,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"\",\n          className: \"songImg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"songnameInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: artist1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_c = SongCard;\nexport default SongCard;\nvar _c;\n$RefreshReg$(_c, \"SongCard\");","map":{"version":3,"names":["React","styled","Howl","useState","audio","SongCard","name","artist1","image","url","soundPlay","stop","unload","src","html5","play","fade"],"sources":["C:/Users/rff96/Documents/GitHub/cop4331-large-project/client/src/components/SongCard/SongCard.jsx"],"sourcesContent":["import React from 'react'\r\nimport './SongCard.css'\r\nimport styled from \"styled-components\";\r\nimport { Howl } from \"howler\"\r\nimport { useState } from 'react';\r\n\r\nvar audio = null;\r\n// id?\r\nconst SongCard = ({ name, artist1, image, url }) => {\r\n\r\n    const soundPlay = () => {\r\n\r\n        //check if its already playing, if it is then stop\r\n        if (audio != null) {\r\n           \r\n            audio.stop();\r\n            audio.unload();\r\n            audio = null;\r\n        }\r\n\r\n        //if not play the song\r\n        else{\r\n            audio = new Howl({\r\n                src: [url],\r\n                html5: true\r\n            })\r\n            audio.play();\r\n            audio.fade(2.0,0);\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"SongCard\">\r\n            <div className=\"song\">\r\n                <div onClick={soundPlay}>\r\n                    <img src={image} alt=\"\" className='songImg' />\r\n                    <div className=\"songnameInfo\">\r\n                        <span>{name}</span>\r\n                        <span>{artist1}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongCard"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAEjC,IAAIC,KAAK,GAAG,IAAI;AAChB;AACA,MAAMC,QAAQ,GAAG,QAAmC;EAAA,IAAlC;IAAEC,IAAI;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAI,CAAC;EAE3C,MAAMC,SAAS,GAAG,MAAM;IAEpB;IACA,IAAIN,KAAK,IAAI,IAAI,EAAE;MAEfA,KAAK,CAACO,IAAI,EAAE;MACZP,KAAK,CAACQ,MAAM,EAAE;MACdR,KAAK,GAAG,IAAI;IAChB;;IAEA;IAAA,KACI;MACAA,KAAK,GAAG,IAAIF,IAAI,CAAC;QACbW,GAAG,EAAE,CAACJ,GAAG,CAAC;QACVK,KAAK,EAAE;MACX,CAAC,CAAC;MACFV,KAAK,CAACW,IAAI,EAAE;MACZX,KAAK,CAACY,IAAI,CAAC,GAAG,EAAC,CAAC,CAAC;IACrB;EAGJ,CAAC;EAGD,oBACI;IAAK,SAAS,EAAC,UAAU;IAAA,uBACrB;MAAK,SAAS,EAAC,MAAM;MAAA,uBACjB;QAAK,OAAO,EAAEN,SAAU;QAAA,wBACpB;UAAK,GAAG,EAAEF,KAAM;UAAC,GAAG,EAAC,EAAE;UAAC,SAAS,EAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAG,eAC9C;UAAK,SAAS,EAAC,cAAc;UAAA,wBACzB;YAAA,UAAOF;UAAI;YAAA;YAAA;YAAA;UAAA,QAAQ,eACnB;YAAA,UAAOC;UAAO;YAAA;YAAA;YAAA;UAAA,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QACpB;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,KAvCKF,QAAQ;AAyCd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}