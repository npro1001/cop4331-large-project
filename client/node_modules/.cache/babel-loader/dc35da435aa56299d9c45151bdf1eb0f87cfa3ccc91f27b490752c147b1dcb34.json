{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rff96\\\\Documents\\\\GitHub\\\\cop4331-large-project\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport './App.css';\nimport { LoginSignUp } from './pages/LoginSignUp/index.jsx';\nimport { EmailSent } from './pages/LoginSignUp/emailSent.jsx';\nimport { Testpage } from './pages/Dashboard/testpage.jsx';\nimport { PasswordReset } from './pages/passwordReset/passwordReset.jsx';\nimport { ResetReq } from './pages/LoginSignUp/passReset';\nimport { AppContainer } from './components/styles/AppContainer.style';\nimport Home from './pages/home/Home';\nimport Profile from './pages/profile/Profile';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { connect } from './features/spotify/spotifySlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const {\n    isConnected\n  } = useSelector(store => store.spotify);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!isConnected && localStorage.getItem('spotify_access_token') != null) {\n      dispatch(connect());\n    }\n  }, [isConnected, user]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(LoginSignUp, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/password_request\",\n              element: /*#__PURE__*/_jsxDEV(ResetReq, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/verification_sent\",\n              element: /*#__PURE__*/_jsxDEV(EmailSent, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 55\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/home\",\n              element: user ? /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n                to: \"/\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 60\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/profile/:username\",\n              element: user ? /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 62\n              }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n                to: \"/\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 76\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/reset_password/:token\",\n              element: /*#__PURE__*/_jsxDEV(PasswordReset, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 59\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"3nQz2fdVXD6cBwPg4oWmwSPhDYk=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Navigate","ToastContainer","LoginSignUp","EmailSent","Testpage","PasswordReset","ResetReq","AppContainer","Home","Profile","useSelector","useDispatch","useEffect","connect","App","user","state","auth","isConnected","store","spotify","dispatch","localStorage","getItem"],"sources":["C:/Users/rff96/Documents/GitHub/cop4331-large-project/client/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport './App.css';\r\nimport { LoginSignUp } from './pages/LoginSignUp/index.jsx';\r\nimport { EmailSent } from './pages/LoginSignUp/emailSent.jsx';\r\nimport { Testpage } from './pages/Dashboard/testpage.jsx';\r\nimport { PasswordReset } from './pages/passwordReset/passwordReset.jsx';\r\nimport { ResetReq } from './pages/LoginSignUp/passReset';\r\nimport { AppContainer } from './components/styles/AppContainer.style';\r\nimport Home from './pages/home/Home'\r\nimport Profile from './pages/profile/Profile'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useEffect } from 'react';\r\nimport { connect } from './features/spotify/spotifySlice'\r\n\r\n\r\nfunction App() {\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { isConnected } = useSelector((store) => store.spotify);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!isConnected && localStorage.getItem('spotify_access_token') != null) {\r\n      dispatch(connect())\r\n    }\r\n  }, [isConnected, user])\r\n\r\n  return (<>\r\n    <AppContainer>\r\n      <Router>\r\n        <div className='container'>\r\n          <Routes>\r\n            <Route path='/' element={<LoginSignUp />} />\r\n            <Route path='/password_request' element={<ResetReq />} />\r\n            <Route path='/verification_sent' element={<EmailSent />} />\r\n            <Route path='/home' element={user ? <Home /> : <Navigate to=\"/\" />} />\r\n            <Route path='/profile/:username' element={user ? <Profile /> : <Navigate to=\"/\" />} />\r\n            <Route path='/reset_password/:token' element={<PasswordReset />} />\r\n          </Routes>\r\n        </div>\r\n      </Router>\r\n      <ToastContainer />\r\n    </AppContainer>\r\n  </>\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}