{"ast":null,"code":"import React from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { ChipGroupProvider } from '../ChipGroup.context.js';\nimport { Group } from '../../Group/Group.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  spacing: \"xs\"\n};\nfunction ChipGroup(props) {\n  const _a = useComponentDefaultProps(\"ChipGroup\", defaultProps, props),\n    {\n      value,\n      defaultValue,\n      onChange,\n      spacing,\n      multiple,\n      children,\n      unstyled\n    } = _a,\n    others = __objRest(_a, [\"value\", \"defaultValue\", \"onChange\", \"spacing\", \"multiple\", \"children\", \"unstyled\"]);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: multiple ? [] : null,\n    onChange\n  });\n  const isChipSelected = val => Array.isArray(_value) ? _value.includes(val) : val === _value;\n  const handleChange = event => {\n    const val = event.currentTarget.value;\n    if (Array.isArray(_value)) {\n      setValue(_value.includes(val) ? _value.filter(v => v !== val) : [..._value, val]);\n    } else {\n      setValue(val);\n    }\n  };\n  return /* @__PURE__ */React.createElement(ChipGroupProvider, {\n    value: {\n      isChipSelected,\n      onChange: handleChange,\n      multiple\n    }\n  }, /* @__PURE__ */React.createElement(Group, __spreadValues({\n    spacing,\n    unstyled\n  }, others), children));\n}\nChipGroup.displayName = \"@mantine/core/ChipGroup\";\nexport { ChipGroup };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","defaultProps","spacing","ChipGroup","props","_a","useComponentDefaultProps","defaultValue","onChange","multiple","children","unstyled","others","_value","setValue","useUncontrolled","finalValue","isChipSelected","val","Array","isArray","includes","handleChange","event","currentTarget","filter","v","React","createElement","ChipGroupProvider","Group","displayName"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\core\\src\\Chip\\ChipGroup\\ChipGroup.tsx"],"sourcesContent":["import React from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { MantineNumberSize, useComponentDefaultProps } from '@mantine/styles';\nimport { Group, GroupProps } from '../../Group';\nimport { ChipGroupProvider } from '../ChipGroup.context';\n\nexport interface ChipGroupProps<T extends boolean = false>\n  extends Omit<GroupProps, 'value' | 'defaultValue' | 'onChange' | 'classNames' | 'styles'> {\n  /** Key of theme.spacing or number to set gap in px */\n  spacing?: MantineNumberSize;\n\n  /** Allow multiple values to be selected at a time */\n  multiple?: T;\n\n  /** Controlled component value */\n  value?: T extends true ? string[] : string;\n\n  /** Uncontrolled component initial value */\n  defaultValue?: T extends true ? string[] : string;\n\n  /** Called when value changes */\n  onChange?(value: T extends true ? string[] : string): void;\n\n  /** <Chip /> components */\n  children?: React.ReactNode;\n}\n\nconst defaultProps: Partial<ChipGroupProps<false>> = {\n  spacing: 'xs',\n};\n\nexport function ChipGroup<T extends boolean>(props: ChipGroupProps<T>) {\n  const { value, defaultValue, onChange, spacing, multiple, children, unstyled, ...others } =\n    useComponentDefaultProps('ChipGroup', defaultProps as any, props);\n\n  const [_value, setValue] = useUncontrolled<string | string[]>({\n    value,\n    defaultValue,\n    finalValue: multiple ? [] : null,\n    onChange,\n  });\n\n  const isChipSelected = (val: string) =>\n    Array.isArray(_value) ? _value.includes(val) : val === _value;\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const val = event.currentTarget.value;\n    if (Array.isArray(_value)) {\n      setValue(_value.includes(val) ? _value.filter((v) => v !== val) : [..._value, val]);\n    } else {\n      setValue(val);\n    }\n  };\n\n  return (\n    <ChipGroupProvider value={{ isChipSelected, onChange: handleChange, multiple }}>\n      <Group spacing={spacing} unstyled={unstyled} {...others}>\n        {children}\n      </Group>\n    </ChipGroupProvider>\n  );\n}\n\nChipGroup.displayName = '@mantine/core/ChipGroup';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}