{"ast":null,"code":"import { createStyles } from '@mantine/styles';\nvar useStyles = createStyles((theme, _ref, getRef) => {\n  let {\n    color,\n    radius,\n    withTitle\n  } = _ref;\n  const _radius = theme.fn.radius(radius);\n  const topBottom = Math.min(Math.max(_radius / 1.2, 4), 30);\n  const colors = theme.fn.variant({\n    variant: \"filled\",\n    color\n  });\n  return {\n    closeButton: theme.fn.hover({\n      backgroundColor: theme.colorScheme === \"dark\" ? theme.colors.dark[8] : theme.colors.gray[0]\n    }),\n    icon: {\n      ref: getRef(\"icon\"),\n      boxSizing: \"border-box\",\n      marginRight: theme.spacing.md,\n      width: 28,\n      height: 28,\n      borderRadius: 28,\n      display: \"flex\",\n      flex: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      color: theme.white\n    },\n    withIcon: {\n      paddingLeft: theme.spacing.xs,\n      \"&::before\": {\n        display: \"none\"\n      }\n    },\n    root: {\n      boxSizing: \"border-box\",\n      position: \"relative\",\n      display: \"flex\",\n      alignItems: \"center\",\n      paddingLeft: 22,\n      paddingRight: 5,\n      paddingTop: theme.spacing.xs,\n      paddingBottom: theme.spacing.xs,\n      borderRadius: _radius,\n      backgroundColor: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : theme.white,\n      boxShadow: theme.shadows.lg,\n      border: `1px solid ${theme.colorScheme === \"dark\" ? theme.colors.dark[6] : theme.colors.gray[2]}`,\n      \"&::before\": {\n        content: '\"\"',\n        display: \"block\",\n        position: \"absolute\",\n        width: 6,\n        top: topBottom,\n        bottom: topBottom,\n        left: 4,\n        borderRadius: _radius,\n        backgroundColor: colors.background\n      },\n      [`& .${getRef(\"icon\")}`]: {\n        backgroundColor: colors.background,\n        color: theme.white\n      }\n    },\n    body: {\n      flex: 1,\n      overflow: \"hidden\",\n      marginRight: 10\n    },\n    loader: {\n      marginRight: theme.spacing.md\n    },\n    title: {\n      lineHeight: 1.4,\n      marginBottom: 2,\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      color: theme.colorScheme === \"dark\" ? theme.white : theme.colors.gray[9]\n    },\n    description: {\n      color: withTitle ? theme.colorScheme === \"dark\" ? theme.colors.dark[2] : theme.colors.gray[6] : theme.colorScheme === \"dark\" ? theme.colors.dark[0] : theme.black,\n      lineHeight: 1.4,\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\"\n    }\n  };\n});\nexport default useStyles;","map":{"version":3,"mappings":"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","names":["createStyles","theme","getRef","color","radius","withTitle","_radius","fn","topBottom","Math","min","max","colors","variant","closeButton","hover","backgroundColor","colorScheme","dark","gray","icon","ref","boxSizing","marginRight","spacing","md","width","height","borderRadius","display","flex","alignItems","justifyContent","white","withIcon","paddingLeft","xs","root","position","paddingRight","paddingTop","paddingBottom","boxShadow","shadows","lg","border","content","top","bottom","left","background","body","overflow","loader","title","lineHeight","marginBottom","textOverflow","description","black"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\core\\src\\Notification\\Notification.styles.ts"],"sourcesContent":["import { createStyles, MantineColor, MantineNumberSize } from '@mantine/styles';\n\nexport interface NotificationStylesParams {\n  color: MantineColor;\n  radius: MantineNumberSize;\n  withTitle: boolean;\n}\n\nexport default createStyles(\n  (theme, { color, radius, withTitle }: NotificationStylesParams, getRef) => {\n    const _radius = theme.fn.radius(radius) as number;\n    const topBottom = Math.min(Math.max(_radius / 1.2, 4), 30);\n    const colors = theme.fn.variant({ variant: 'filled', color });\n\n    return {\n      closeButton: theme.fn.hover({\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.colors.gray[0],\n      }),\n\n      icon: {\n        ref: getRef('icon'),\n        boxSizing: 'border-box',\n        marginRight: theme.spacing.md,\n        width: 28,\n        height: 28,\n        borderRadius: 28,\n        display: 'flex',\n        flex: 'none',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: theme.white,\n      },\n\n      withIcon: {\n        paddingLeft: theme.spacing.xs,\n\n        '&::before': {\n          display: 'none',\n        },\n      },\n\n      root: {\n        boxSizing: 'border-box',\n        position: 'relative',\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: 22,\n        paddingRight: 5,\n        paddingTop: theme.spacing.xs,\n        paddingBottom: theme.spacing.xs,\n        borderRadius: _radius,\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.white,\n        boxShadow: theme.shadows.lg,\n        border: `1px solid ${\n          theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[2]\n        }`,\n\n        '&::before': {\n          content: '\"\"',\n          display: 'block',\n          position: 'absolute',\n          width: 6,\n          top: topBottom,\n          bottom: topBottom,\n          left: 4,\n          borderRadius: _radius,\n          backgroundColor: colors.background,\n        },\n\n        [`& .${getRef('icon')}`]: {\n          backgroundColor: colors.background,\n          color: theme.white,\n        },\n      },\n\n      body: {\n        flex: 1,\n        overflow: 'hidden',\n        marginRight: 10,\n      },\n\n      loader: {\n        marginRight: theme.spacing.md,\n      },\n\n      title: {\n        lineHeight: 1.4,\n        marginBottom: 2,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        color: theme.colorScheme === 'dark' ? theme.white : theme.colors.gray[9],\n      },\n\n      description: {\n        color: withTitle\n          ? theme.colorScheme === 'dark'\n            ? theme.colors.dark[2]\n            : theme.colors.gray[6]\n          : theme.colorScheme === 'dark'\n          ? theme.colors.dark[0]\n          : theme.black,\n        lineHeight: 1.4,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n      },\n    };\n  }\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}