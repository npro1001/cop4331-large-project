{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport useStyles from './Notification.styles.js';\nimport { Box } from '../Box/Box.js';\nimport { Loader } from '../Loader/Loader.js';\nimport { Text } from '../Text/Text.js';\nimport { CloseButton } from '../CloseButton/CloseButton.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst Notification = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Notification\", {}, props),\n    {\n      className,\n      color,\n      radius,\n      loading,\n      disallowClose,\n      title,\n      icon,\n      children,\n      onClose,\n      closeButtonProps,\n      classNames,\n      styles,\n      unstyled\n    } = _a,\n    others = __objRest(_a, [\"className\", \"color\", \"radius\", \"loading\", \"disallowClose\", \"title\", \"icon\", \"children\", \"onClose\", \"closeButtonProps\", \"classNames\", \"styles\", \"unstyled\"]);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    color,\n    radius,\n    withTitle: !!title\n  }, {\n    classNames,\n    styles,\n    unstyled,\n    name: \"Notification\"\n  });\n  const withIcon = icon || loading;\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, {\n      [classes.withIcon]: withIcon\n    }, className),\n    role: \"alert\",\n    ref\n  }, others), icon && !loading && /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.icon\n  }, icon), loading && /* @__PURE__ */React.createElement(Loader, {\n    size: 28,\n    color,\n    className: classes.loader\n  }), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.body\n  }, title && /* @__PURE__ */React.createElement(Text, {\n    className: classes.title,\n    size: \"sm\",\n    weight: 500\n  }, title), /* @__PURE__ */React.createElement(Text, {\n    color: \"dimmed\",\n    className: classes.description,\n    size: \"sm\"\n  }, children)), !disallowClose && /* @__PURE__ */React.createElement(CloseButton, __spreadProps(__spreadValues({\n    iconSize: 16,\n    color: \"gray\"\n  }, closeButtonProps), {\n    onClick: onClose,\n    className: classes.closeButton\n  })));\n});\nNotification.displayName = \"@mantine/core/Notification\";\nexport { Notification };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","Notification","forwardRef","props","ref","_a","useComponentDefaultProps","className","color","radius","loading","disallowClose","title","icon","children","onClose","closeButtonProps","classNames","styles","unstyled","others","classes","cx","useStyles","withTitle","name","withIcon","React","createElement","Box","root","role","Loader","size","loader","body","Text","weight","description","CloseButton","iconSize","onClick","closeButton","displayName"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\core\\src\\Notification\\Notification.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport {\n  DefaultProps,\n  MantineColor,\n  Selectors,\n  MantineNumberSize,\n  useComponentDefaultProps,\n} from '@mantine/styles';\nimport { Text } from '../Text';\nimport { Loader } from '../Loader';\nimport { CloseButton } from '../CloseButton';\nimport { Box } from '../Box';\nimport useStyles, { NotificationStylesParams } from './Notification.styles';\n\nexport type NotificationStylesNames = Exclude<Selectors<typeof useStyles>, 'withIcon'>;\n\nexport interface NotificationProps\n  extends DefaultProps<NotificationStylesNames, NotificationStylesParams>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'title'> {\n  /** Called when close button is clicked */\n  onClose?(): void;\n\n  /** Notification line or icon color */\n  color?: MantineColor;\n\n  /** Radius from theme.radius, or number to set border-radius in px */\n  radius?: MantineNumberSize;\n\n  /** Notification icon, replaces color line */\n  icon?: React.ReactNode;\n\n  /** Notification title, displayed before body */\n  title?: React.ReactNode;\n\n  /** Notification body, place main text here */\n  children?: React.ReactNode;\n\n  /** Replaces colored line or icon with Loader component */\n  loading?: boolean;\n\n  /** Removes close button */\n  disallowClose?: boolean;\n\n  /** Props spread to close button */\n  closeButtonProps?: Record<string, any>;\n}\n\nexport const Notification = forwardRef<HTMLDivElement, NotificationProps>((props, ref) => {\n  const {\n    className,\n    color,\n    radius,\n    loading,\n    disallowClose,\n    title,\n    icon,\n    children,\n    onClose,\n    closeButtonProps,\n    classNames,\n    styles,\n    unstyled,\n    ...others\n  } = useComponentDefaultProps('Notification', {}, props);\n\n  const { classes, cx } = useStyles(\n    { color, radius, withTitle: !!title },\n    { classNames, styles, unstyled, name: 'Notification' }\n  );\n  const withIcon = icon || loading;\n\n  return (\n    <Box\n      className={cx(classes.root, { [classes.withIcon]: withIcon }, className)}\n      role=\"alert\"\n      ref={ref}\n      {...others}\n    >\n      {icon && !loading && <div className={classes.icon}>{icon}</div>}\n      {loading && <Loader size={28} color={color} className={classes.loader} />}\n\n      <div className={classes.body}>\n        {title && (\n          <Text className={classes.title} size=\"sm\" weight={500}>\n            {title}\n          </Text>\n        )}\n\n        <Text color=\"dimmed\" className={classes.description} size=\"sm\">\n          {children}\n        </Text>\n      </div>\n\n      {!disallowClose && (\n        <CloseButton\n          iconSize={16}\n          color=\"gray\"\n          {...closeButtonProps}\n          onClick={onClose}\n          className={classes.closeButton}\n        />\n      )}\n    </Box>\n  );\n});\n\nNotification.displayName = '@mantine/core/Notification';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}