{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rff96\\\\Documents\\\\GitHub\\\\cop4331-large-project\\\\client\\\\src\\\\components\\\\PostContainer\\\\PostContainer.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './PostContainer.css';\nimport Post from \"../Post/Post\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { getPosts } from \"../../features/post/postSlice\";\nimport { useEffect, useState } from \"react\";\nimport LoadingScreen from \"../loadingScreen/loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmptyFeed = styled.h1`\n    \n    align-self: center;\n    font-size: 20px;\n    color: #391F59;\n`;\n_c = EmptyFeed;\nconst AddOn = styled.h3`\n    align-self: center;\n    font-size: 15px;\n    color: #391F59;\n    bottom: 45px;\n    position: relative;\n`;\n_c2 = AddOn;\nconst Posts = () => {\n  _s();\n  const user = useSelector(state => state.auth.user);\n  const dispatch = useDispatch();\n  var [displayPosts, setDisplayPosts] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  async function fetchData() {\n    if (user.following == null) {\n      setDisplayPosts(null);\n    } else {\n      if (user.following.length >= 0) {\n        await dispatch(getPosts(user)).then(response => {\n          setDisplayPosts(response.payload);\n          setIsLoading(false);\n        });\n      }\n    }\n  }\n  useEffect(() => {\n    fetchData();\n  }, [displayPosts]); //! Important\n\n  if (!isLoading) {\n    if (displayPosts.length == 0 || displayPosts == null) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(EmptyFeed, {\n          children: \" No posts to display...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(AddOn, {\n          children: \"Try posting something!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 65\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Posts\",\n        children: displayPosts.map((post, id) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: post.img ? /*#__PURE__*/_jsxDEV(Post, {\n              data: post,\n              img: post.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(Post, {\n              data: post\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 79\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this);\n    }\n  } else {\n    //if there are no posts to display\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(Posts, \"5WxZfgaQ0D0zwO6gkB+jPV2cFu8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c3 = Posts;\nexport default Posts;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"EmptyFeed\");\n$RefreshReg$(_c2, \"AddOn\");\n$RefreshReg$(_c3, \"Posts\");","map":{"version":3,"names":["React","Post","useDispatch","useSelector","styled","getPosts","useEffect","useState","LoadingScreen","EmptyFeed","h1","AddOn","h3","Posts","user","state","auth","dispatch","displayPosts","setDisplayPosts","isLoading","setIsLoading","fetchData","following","length","then","response","payload","map","post","id","img"],"sources":["C:/Users/rff96/Documents/GitHub/cop4331-large-project/client/src/components/PostContainer/PostContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport './PostContainer.css'\r\nimport Post from \"../Post/Post\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { getPosts } from \"../../features/post/postSlice\"\r\nimport { useEffect, useState } from \"react\"\r\nimport LoadingScreen from \"../loadingScreen/loading\";\r\n\r\nconst EmptyFeed = styled.h1`\r\n    \r\n    align-self: center;\r\n    font-size: 20px;\r\n    color: #391F59;\r\n`\r\nconst AddOn = styled.h3`\r\n    align-self: center;\r\n    font-size: 15px;\r\n    color: #391F59;\r\n    bottom: 45px;\r\n    position: relative;\r\n`\r\nconst Posts = () => {\r\n    const user = useSelector((state) => state.auth.user)\r\n    const dispatch = useDispatch()\r\n    var [displayPosts, setDisplayPosts] = useState()\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    async function fetchData() {\r\n        if (user.following == null)\r\n        {\r\n            setDisplayPosts(null);\r\n        }\r\n        else{\r\n            if (user.following.length >= 0) {\r\n                await dispatch(getPosts(user))\r\n                    .then(response => {\r\n                        setDisplayPosts(response.payload)\r\n                        setIsLoading(false)\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        fetchData();\r\n\r\n    }, [displayPosts]); //! Important\r\n\r\n    if (!isLoading) {\r\n        if (displayPosts.length == 0 || displayPosts == null) {\r\n            return (\r\n                <><EmptyFeed> No posts to display...</EmptyFeed><AddOn>Try posting something!</AddOn></>\r\n            )\r\n        }\r\n\r\n        else {\r\n            return (\r\n                <div className=\"Posts\">\r\n                    {displayPosts.map((post, id) => {\r\n                        return <div key={id}>\r\n                            {post.img ? <Post data={post} img={post.img} /> : <Post data={post} />}\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    else\r\n    {    //if there are no posts to display\r\n        return (\r\n            <LoadingScreen></LoadingScreen>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Posts"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAC5B,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,QAAQ,+BAA+B;AACxD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,0BAA0B;AAAC;AAAA;AAErD,MAAMC,SAAS,GAAGL,MAAM,CAACM,EAAG;AAC5B;AACA;AACA;AACA;AACA,CAAC;AAAA,KALKD,SAAS;AAMf,MAAME,KAAK,GAAGP,MAAM,CAACQ,EAAG;AACxB;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,MANKD,KAAK;AAOX,MAAME,KAAK,GAAG,MAAM;EAAA;EAChB,MAAMC,IAAI,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,IAAI,CAAC;EACpD,MAAMG,QAAQ,GAAGf,WAAW,EAAE;EAC9B,IAAI,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,EAAE;EAChD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEhD,eAAee,SAAS,GAAG;IACvB,IAAIR,IAAI,CAACS,SAAS,IAAI,IAAI,EAC1B;MACIJ,eAAe,CAAC,IAAI,CAAC;IACzB,CAAC,MACG;MACA,IAAIL,IAAI,CAACS,SAAS,CAACC,MAAM,IAAI,CAAC,EAAE;QAC5B,MAAMP,QAAQ,CAACZ,QAAQ,CAACS,IAAI,CAAC,CAAC,CACzBW,IAAI,CAACC,QAAQ,IAAI;UACdP,eAAe,CAACO,QAAQ,CAACC,OAAO,CAAC;UACjCN,YAAY,CAAC,KAAK,CAAC;QACvB,CAAC,CAAC;MACV;IACJ;EACJ;EAEAf,SAAS,CAAC,MAAM;IAEZgB,SAAS,EAAE;EAEf,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC,CAAC,CAAC;;EAEpB,IAAI,CAACE,SAAS,EAAE;IACZ,IAAIF,YAAY,CAACM,MAAM,IAAI,CAAC,IAAIN,YAAY,IAAI,IAAI,EAAE;MAClD,oBACI;QAAA,wBAAE,QAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoC,uBAAC,KAAK;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA+B;MAAA,gBAAG;IAEhG,CAAC,MAEI;MACD,oBACI;QAAK,SAAS,EAAC,OAAO;QAAA,UACjBA,YAAY,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,EAAE,KAAK;UAC5B,oBAAO;YAAA,UACFD,IAAI,CAACE,GAAG,gBAAG,QAAC,IAAI;cAAC,IAAI,EAAEF,IAAK;cAAC,GAAG,EAAEA,IAAI,CAACE;YAAI;cAAA;cAAA;cAAA;YAAA,QAAG,gBAAG,QAAC,IAAI;cAAC,IAAI,EAAEF;YAAK;cAAA;cAAA;cAAA;YAAA;UAAG,GADzDC,EAAE;YAAA;YAAA;YAAA;UAAA,QAEb;QACV,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACA;IAEd;EACJ,CAAC,MAGD;IAAK;IACD,oBACI,QAAC,aAAa;MAAA;MAAA;MAAA;IAAA,QAAiB;EAEvC;AACJ,CAAC;AAAA,GAtDKjB,KAAK;EAAA,QACMV,WAAW,EACPD,WAAW;AAAA;AAAA,MAF1BW,KAAK;AAwDX,eAAeA,KAAK;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}