{"ast":null,"code":"import React, { forwardRef, useState, useRef } from 'react';\nimport { useMove, useDidUpdate, useMergedRef, clampUseMovePosition } from '@mantine/hooks';\nimport { Thumb } from '../Thumb/Thumb.js';\nimport useStyles from './ColorSlider.styles.js';\nimport { Box } from '../../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst ColorSlider = forwardRef((_a, ref) => {\n  var _b = _a,\n    {\n      value,\n      onChange,\n      onChangeEnd,\n      maxValue,\n      round,\n      size = \"md\",\n      thumbColor = \"transparent\",\n      __staticSelector = \"ColorSlider\",\n      focusable = true,\n      overlays,\n      classNames,\n      styles,\n      className,\n      unstyled\n    } = _b,\n    others = __objRest(_b, [\"value\", \"onChange\", \"onChangeEnd\", \"maxValue\", \"round\", \"size\", \"thumbColor\", \"__staticSelector\", \"focusable\", \"overlays\", \"classNames\", \"styles\", \"className\", \"unstyled\"]);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    size\n  }, {\n    classNames,\n    styles,\n    name: __staticSelector,\n    unstyled\n  });\n  const [position, setPosition] = useState({\n    y: 0,\n    x: value / maxValue\n  });\n  const positionRef = useRef(position);\n  const getChangeValue = val => round ? Math.round(val * maxValue) : val * maxValue;\n  const {\n    ref: sliderRef\n  } = useMove(_ref => {\n    let {\n      x,\n      y\n    } = _ref;\n    positionRef.current = {\n      x,\n      y\n    };\n    onChange(getChangeValue(x));\n  }, {\n    onScrubEnd: () => {\n      const {\n        x\n      } = positionRef.current;\n      onChangeEnd(getChangeValue(x));\n    }\n  });\n  useDidUpdate(() => {\n    setPosition({\n      y: 0,\n      x: value / maxValue\n    });\n  }, [value]);\n  const handleArrow = (event, pos) => {\n    event.preventDefault();\n    const _position = clampUseMovePosition(pos);\n    onChange(getChangeValue(_position.x));\n    onChangeEnd(getChangeValue(_position.x));\n  };\n  const handleKeyDown = event => {\n    switch (event.key) {\n      case \"ArrowRight\":\n        {\n          handleArrow(event, {\n            x: position.x + 0.05,\n            y: position.y\n          });\n          break;\n        }\n      case \"ArrowLeft\":\n        {\n          handleArrow(event, {\n            x: position.x - 0.05,\n            y: position.y\n          });\n          break;\n        }\n    }\n  };\n  const layers = overlays.map((overlay, index) => /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.sliderOverlay,\n    style: overlay,\n    key: index\n  }));\n  return /* @__PURE__ */React.createElement(Box, __spreadProps(__spreadValues({}, others), {\n    ref: useMergedRef(sliderRef, ref),\n    className: cx(classes.slider, className),\n    role: \"slider\",\n    \"aria-valuenow\": value,\n    \"aria-valuemax\": maxValue,\n    \"aria-valuemin\": 0,\n    tabIndex: focusable ? 0 : -1,\n    onKeyDown: handleKeyDown\n  }), layers, /* @__PURE__ */React.createElement(Thumb, {\n    __staticSelector,\n    classNames,\n    styles,\n    position,\n    style: {\n      top: 1,\n      backgroundColor: thumbColor\n    },\n    className: classes.sliderThumb,\n    size\n  }));\n});\nColorSlider.displayName = \"@mantine/core/ColorSlider\";\nexport { ColorSlider };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","ColorSlider","forwardRef","_a","ref","_b","onChange","onChangeEnd","maxValue","round","size","thumbColor","__staticSelector","focusable","overlays","classNames","styles","className","unstyled","others","classes","cx","useStyles","name","position","setPosition","useState","y","x","positionRef","useRef","getChangeValue","val","Math","sliderRef","useMove","current","onScrubEnd","useDidUpdate","handleArrow","event","pos","preventDefault","_position","clampUseMovePosition","handleKeyDown","layers","map","overlay","index","React","createElement","sliderOverlay","style","Box","useMergedRef","slider","role","tabIndex","onKeyDown","Thumb","top","backgroundColor","sliderThumb","displayName"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\core\\src\\ColorPicker\\ColorSlider\\ColorSlider.tsx"],"sourcesContent":["import React, { useState, forwardRef, useRef } from 'react';\nimport {\n  useMove,\n  clampUseMovePosition,\n  useDidUpdate,\n  UseMovePosition,\n  useMergedRef,\n} from '@mantine/hooks';\nimport { DefaultProps, MantineSize, Selectors } from '@mantine/styles';\nimport { Box } from '../../Box';\nimport { Thumb, ThumbStylesNames } from '../Thumb/Thumb';\nimport useStyles from './ColorSlider.styles';\n\nexport type ColorSliderStylesNames =\n  | Exclude<Selectors<typeof useStyles>, 'sliderThumb'>\n  | ThumbStylesNames;\n\nexport interface BaseColorSliderProps\n  extends DefaultProps<ColorSliderStylesNames>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'value' | 'onChange'> {\n  value: number;\n  onChange(value: number): void;\n  onChangeEnd(value: number): void;\n  size?: MantineSize;\n  focusable?: boolean;\n  __staticSelector?: string;\n}\n\nexport interface ColorSliderProps extends BaseColorSliderProps {\n  maxValue: number;\n  overlays: React.CSSProperties[];\n  round: boolean;\n  thumbColor?: string;\n}\n\nexport const ColorSlider = forwardRef<HTMLDivElement, ColorSliderProps>(\n  (\n    {\n      value,\n      onChange,\n      onChangeEnd,\n      maxValue,\n      round,\n      size = 'md',\n      thumbColor = 'transparent',\n      __staticSelector = 'ColorSlider',\n      focusable = true,\n      overlays,\n      classNames,\n      styles,\n      className,\n      unstyled,\n      ...others\n    }: ColorSliderProps,\n    ref\n  ) => {\n    const { classes, cx } = useStyles(\n      { size },\n      { classNames, styles, name: __staticSelector, unstyled }\n    );\n    const [position, setPosition] = useState({ y: 0, x: value / maxValue });\n    const positionRef = useRef(position);\n    const getChangeValue = (val: number) => (round ? Math.round(val * maxValue) : val * maxValue);\n    const { ref: sliderRef } = useMove(\n      ({ x, y }) => {\n        positionRef.current = { x, y };\n        onChange(getChangeValue(x));\n      },\n      {\n        onScrubEnd: () => {\n          const { x } = positionRef.current;\n          onChangeEnd(getChangeValue(x));\n        },\n      }\n    );\n\n    useDidUpdate(() => {\n      setPosition({ y: 0, x: value / maxValue });\n    }, [value]);\n\n    const handleArrow = (event: React.KeyboardEvent<HTMLDivElement>, pos: UseMovePosition) => {\n      event.preventDefault();\n      const _position = clampUseMovePosition(pos);\n      onChange(getChangeValue(_position.x));\n      onChangeEnd(getChangeValue(_position.x));\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n      switch (event.key) {\n        case 'ArrowRight': {\n          handleArrow(event, { x: position.x + 0.05, y: position.y });\n          break;\n        }\n\n        case 'ArrowLeft': {\n          handleArrow(event, { x: position.x - 0.05, y: position.y });\n          break;\n        }\n      }\n    };\n\n    const layers = overlays.map((overlay, index) => (\n      <div className={classes.sliderOverlay} style={overlay} key={index} />\n    ));\n\n    return (\n      <Box\n        {...others}\n        ref={useMergedRef(sliderRef, ref)}\n        className={cx(classes.slider, className)}\n        role=\"slider\"\n        aria-valuenow={value}\n        aria-valuemax={maxValue}\n        aria-valuemin={0}\n        tabIndex={focusable ? 0 : -1}\n        onKeyDown={handleKeyDown}\n      >\n        {layers}\n\n        <Thumb\n          __staticSelector={__staticSelector}\n          classNames={classNames}\n          styles={styles}\n          position={position}\n          style={{ top: 1, backgroundColor: thumbColor }}\n          className={classes.sliderThumb}\n          size={size}\n        />\n      </Box>\n    );\n  }\n);\n\nColorSlider.displayName = '@mantine/core/ColorSlider';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}