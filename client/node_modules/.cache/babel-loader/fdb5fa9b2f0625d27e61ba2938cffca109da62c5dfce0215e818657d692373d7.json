{"ast":null,"code":"import { useRef, useState, useEffect } from 'react';\nimport { flushSync } from 'react-dom';\nimport { mergeRefs, useDidUpdate } from '@mantine/hooks';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nfunction getAutoHeightDuration(height) {\n  if (!height || typeof height === \"string\") {\n    return 0;\n  }\n  const constant = height / 36;\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}\nfunction getElementHeight(el) {\n  return (el == null ? void 0 : el.current) ? el.current.scrollHeight : \"auto\";\n}\nfunction getElementWidth(el) {\n  return (el == null ? void 0 : el.current) ? el.current.scrollWidth : \"auto\";\n}\nconst raf = typeof window !== \"undefined\" && window.requestAnimationFrame;\nfunction useCollapse(_ref) {\n  let {\n    transitionDuration,\n    transitionTimingFunction = \"ease\",\n    onTransitionEnd = () => {},\n    opened,\n    axis\n  } = _ref;\n  const el = useRef(null);\n  const collapsedHeight = \"0px\";\n  const [styles, setStylesRaw] = useState({});\n  const setStyles = newStyles => {\n    flushSync(() => setStylesRaw(newStyles));\n  };\n  const mergeStyles = newStyles => {\n    setStyles(oldStyles => __spreadValues(__spreadValues({}, oldStyles), newStyles));\n  };\n  function getTransitionStyles(height) {\n    const _duration = transitionDuration || getAutoHeightDuration(height);\n    return {\n      transitionProperty: `${axis === \"x\" ? \"width\" : \"height\"}`,\n      transitionDuration: `${_duration}ms`,\n      transitionTimingFunction: `${transitionTimingFunction}`\n    };\n  }\n  const getDefaultSizes = () => {\n    const oldStyles = styles;\n    setStyles({});\n    const sizes = {\n      width: getElementWidth(el),\n      height: getElementHeight(el)\n    };\n    setStyles(oldStyles);\n    return sizes;\n  };\n  const getCollapsedStyles = () => {\n    const {\n      height\n    } = getDefaultSizes();\n    return {\n      x: {\n        height,\n        width: \"0px\",\n        overflow: \"hidden\"\n      },\n      y: {\n        display: \"none\",\n        height: \"0px\",\n        overflow: \"hidden\"\n      }\n    };\n  };\n  useEffect(() => {\n    raf(() => {\n      const {\n        x,\n        y\n      } = getCollapsedStyles();\n      if (axis === \"x\" && !opened) {\n        setStyles(__spreadValues({}, x));\n      } else if (axis === \"y\" && !opened) {\n        setStyles(__spreadValues({}, y));\n      }\n    });\n  }, []);\n  useDidUpdate(() => {\n    if (axis === \"x\") return;\n    if (opened) {\n      raf(() => {\n        mergeStyles({\n          willChange: \"height\",\n          display: \"block\",\n          overflow: \"hidden\"\n        });\n        raf(() => {\n          const height = getElementHeight(el);\n          mergeStyles(__spreadProps(__spreadValues({}, getTransitionStyles(height)), {\n            height\n          }));\n        });\n      });\n    } else {\n      raf(() => {\n        const height = getElementHeight(el);\n        mergeStyles(__spreadProps(__spreadValues({}, getTransitionStyles(height)), {\n          willChange: \"height\",\n          height\n        }));\n        raf(() => mergeStyles({\n          height: collapsedHeight,\n          overflow: \"hidden\"\n        }));\n      });\n    }\n  }, [opened]);\n  useDidUpdate(() => {\n    if (axis === \"y\") return;\n    if (opened) {\n      raf(() => {\n        const {\n          width\n        } = getDefaultSizes();\n        mergeStyles({\n          display: \"block\",\n          overflow: \"hidden\",\n          willChange: \"width\",\n          flexShrink: 0\n        });\n        raf(() => {\n          mergeStyles(__spreadProps(__spreadValues({}, getTransitionStyles(width)), {\n            width\n          }));\n        });\n      });\n    } else {\n      raf(() => {\n        const {\n          width,\n          height\n        } = getDefaultSizes();\n        mergeStyles(__spreadProps(__spreadValues({}, getTransitionStyles(width)), {\n          flexShrink: 0,\n          willChange: \"width\",\n          width,\n          height\n        }));\n        raf(() => mergeStyles({\n          width: \"0px\",\n          overflow: \"hidden\"\n        }));\n      });\n    }\n  }, [opened]);\n  const handleTransitionEnd = e => {\n    if (e.target !== el.current || !(e.propertyName === \"width\" || \"height\")) {\n      return;\n    }\n    onTransitionEnd();\n    if (opened) {\n      setStyles({});\n    } else {\n      const {\n        x,\n        y\n      } = getCollapsedStyles();\n      if (axis === \"x\") setStyles(x);else setStyles(y);\n    }\n  };\n  function getCollapseProps() {\n    let _a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _b = _a,\n      {\n        style = {},\n        refKey = \"ref\"\n      } = _b,\n      rest = __objRest(_b, [\"style\", \"refKey\"]);\n    const theirRef = rest[refKey];\n    return __spreadProps(__spreadValues({\n      \"aria-hidden\": !opened\n    }, rest), {\n      [refKey]: mergeRefs(el, theirRef),\n      onTransitionEnd: handleTransitionEnd,\n      style: __spreadValues(__spreadValues({\n        boxSizing: \"border-box\"\n      }, style), styles)\n    });\n  }\n  return getCollapseProps;\n}\nexport { getElementHeight, getElementWidth, useCollapse };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","getAutoHeightDuration","height","constant","Math","round","getElementHeight","el","current","scrollHeight","getElementWidth","scrollWidth","raf","window","requestAnimationFrame","useCollapse","transitionDuration","transitionTimingFunction","onTransitionEnd","opened","axis","useRef","collapsedHeight","styles","setStylesRaw","useState","setStyles","newStyles","flushSync","mergeStyles","oldStyles","getTransitionStyles","_duration","transitionProperty","getDefaultSizes","sizes","width","getCollapsedStyles","x","overflow","y","display","useEffect","useDidUpdate","willChange","flexShrink","handleTransitionEnd","e","propertyName","getCollapseProps","_a","_b","style","refKey","rest","theirRef","mergeRefs","boxSizing"],"sources":["C:\\Users\\rff96\\Documents\\GitHub\\cop4331-large-project\\node_modules\\@mantine\\core\\src\\Collapse\\use-collapse.ts"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { flushSync } from 'react-dom';\nimport { useDidUpdate, mergeRefs } from '@mantine/hooks';\n\nfunction getAutoHeightDuration(height: number | string) {\n  if (!height || typeof height === 'string') {\n    return 0;\n  }\n  const constant = height / 36;\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}\n\nexport function getElementHeight(\n  el: React.RefObject<HTMLElement> | { current?: { scrollHeight: number } }\n) {\n  return el?.current ? el.current.scrollHeight : 'auto';\n}\n\nexport function getElementWidth(\n  el: React.RefObject<HTMLElement> | { current?: { scrollWidth: number } }\n) {\n  return el?.current ? el.current.scrollWidth : 'auto';\n}\n\nconst raf = typeof window !== 'undefined' && window.requestAnimationFrame;\n\ninterface UseCollapse {\n  axis: 'x' | 'y';\n  opened: boolean;\n  transitionDuration?: number;\n  transitionTimingFunction?: string;\n  onTransitionEnd?: () => void;\n}\n\ninterface GetCollapseProps {\n  [key: string]: unknown;\n  style?: React.CSSProperties;\n  onTransitionEnd?: (e: TransitionEvent) => void;\n  refKey?: string;\n  ref?: React.MutableRefObject<HTMLDivElement> | ((node: HTMLDivElement) => void);\n}\n\nexport function useCollapse({\n  transitionDuration,\n  transitionTimingFunction = 'ease',\n  onTransitionEnd = () => {},\n  opened,\n  axis,\n}: UseCollapse): (props: GetCollapseProps) => Record<string, any> {\n  const el = useRef<HTMLElement | null>(null);\n  const collapsedHeight = '0px';\n  const [styles, setStylesRaw] = useState<React.CSSProperties>({});\n\n  const setStyles = (newStyles: {} | ((oldStyles: {}) => {})): void => {\n    flushSync(() => setStylesRaw(newStyles));\n  };\n\n  const mergeStyles = (newStyles: {}): void => {\n    setStyles((oldStyles) => ({ ...oldStyles, ...newStyles }));\n  };\n\n  function getTransitionStyles(height: number | string): {\n    transition?: string;\n    transitionProperty?: string;\n    transitionDuration?: string;\n    transitionTimingFunction?: string;\n  } {\n    const _duration = transitionDuration || getAutoHeightDuration(height);\n    return {\n      transitionProperty: `${axis === 'x' ? 'width' : 'height'}`,\n      transitionDuration: `${_duration}ms`,\n      transitionTimingFunction: `${transitionTimingFunction}`,\n    };\n  }\n\n  const getDefaultSizes = () => {\n    const oldStyles = styles;\n    setStyles({});\n    const sizes = { width: getElementWidth(el), height: getElementHeight(el) };\n    setStyles(oldStyles);\n    return sizes;\n  };\n\n  const getCollapsedStyles = () => {\n    const { height } = getDefaultSizes();\n    return {\n      x: { height, width: '0px', overflow: 'hidden' },\n      y: { display: 'none', height: '0px', overflow: 'hidden' },\n    };\n  };\n\n  useEffect(() => {\n    raf(() => {\n      const { x, y } = getCollapsedStyles();\n      if (axis === 'x' && !opened) {\n        setStyles({ ...x });\n      } else if (axis === 'y' && !opened) {\n        setStyles({ ...y });\n      }\n    });\n  }, []);\n\n  // y axis\n  useDidUpdate(() => {\n    if (axis === 'x') return;\n\n    if (opened) {\n      raf(() => {\n        mergeStyles({ willChange: 'height', display: 'block', overflow: 'hidden' });\n        raf(() => {\n          const height = getElementHeight(el);\n          mergeStyles({ ...getTransitionStyles(height), height });\n        });\n      });\n    } else {\n      raf(() => {\n        const height = getElementHeight(el);\n        mergeStyles({ ...getTransitionStyles(height), willChange: 'height', height });\n        raf(() => mergeStyles({ height: collapsedHeight, overflow: 'hidden' }));\n      });\n    }\n  }, [opened]);\n\n  // x axis\n  useDidUpdate(() => {\n    if (axis === 'y') return;\n\n    if (opened) {\n      raf(() => {\n        const { width } = getDefaultSizes();\n        mergeStyles({\n          display: 'block',\n          overflow: 'hidden',\n          willChange: 'width',\n          flexShrink: 0,\n        });\n        raf(() => {\n          mergeStyles({ ...getTransitionStyles(width), width });\n        });\n      });\n    } else {\n      raf(() => {\n        const { width, height } = getDefaultSizes();\n        mergeStyles({\n          ...getTransitionStyles(width),\n          flexShrink: 0,\n          willChange: 'width',\n          width,\n          height,\n        });\n        raf(() => mergeStyles({ width: '0px', overflow: 'hidden' }));\n      });\n    }\n  }, [opened]);\n\n  const handleTransitionEnd = (e: React.TransitionEvent): void => {\n    if (e.target !== el.current || !(e.propertyName === 'width' || 'height')) {\n      return;\n    }\n\n    onTransitionEnd();\n    if (opened) {\n      setStyles({});\n    } else {\n      const { x, y } = getCollapsedStyles();\n      if (axis === 'x') setStyles(x);\n      else setStyles(y);\n    }\n  };\n\n  function getCollapseProps({ style = {}, refKey = 'ref', ...rest }: GetCollapseProps = {}) {\n    const theirRef: any = rest[refKey];\n\n    return {\n      'aria-hidden': !opened,\n      ...rest,\n      [refKey]: mergeRefs(el, theirRef),\n      onTransitionEnd: handleTransitionEnd,\n      style: { boxSizing: 'border-box', ...style, ...styles },\n    };\n  }\n\n  return getCollapseProps;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}